<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0415.1144                               -->
<workbook original-version='18.1' source-build='2022.1.1 (20221.22.0415.1144)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders+ (Sample - Superstore)' inline='true' name='federated.137ifgn0pnnl441h036lt14rbott' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0canmlb1gxwn8g0zl583p1bgklh0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/THP/data/s6j3/Sample - Superstore.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0canmlb1gxwn8g0zl583p1bgklh0' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10001:no:A1:U10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0canmlb1gxwn8g0zl583p1bgklh0' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U10001:no:A1:U10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country/Region' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.0canmlb1gxwn8g0zl583p1bgklh0' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.0canmlb1gxwn8g0zl583p1bgklh0' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country/Region]' value='[Orders].[Country/Region]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10001:no:A1:U10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B801:no:A1:B801:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_BA643A1843144AEA8989AC75B050A5AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_6330B4C54EE043539A4DBF44E6179F34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_6330B4C54EE043539A4DBF44E6179F34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_45BFAD73354842E5B7510D9EB324BD00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_45BFAD73354842E5B7510D9EB324BD00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_BA643A1843144AEA8989AC75B050A5AA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_6330B4C54EE043539A4DBF44E6179F34]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_45BFAD73354842E5B7510D9EB324BD00]' role='measure' type='quantitative' />
      <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group caption='Action (Customer Name)' hidden='true' name='[Action (Customer Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer Name]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Customer Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Adrian Shami&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Annie Thurman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bill Eplett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brian Derr&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dan Campbell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Kendrick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Edward Becker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Erin Creighton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fred Harton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Janet Martin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;John Lucas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Larry Hughes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Oakman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monica Federle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nick Radford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philip Brown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Roland Murray&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sample Company A&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sean Wendt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tim Brockman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Xylona Preis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alex Avila&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ann Chong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Candace McMahon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad Sievert&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chuck Clark&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Craig Reiter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eric Barreto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;George Bell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Harold Ryan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jack Lebron&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joy Smith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katharine Harms&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ken Heidel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Melanie Seite&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mike Caudle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Olvera Toch&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pauline Webber&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Randy Bradley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rob Williams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scot Coram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shui Tom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tom Stivers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adam Hart&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allen Armold&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anna Gayman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brendan Murry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dave Kipp&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Duane Noonan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Erica Hackney&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frank Merwin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;John Dryer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Matt Collister&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Michael Granlund&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Neil Knudson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pete Takahito&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Resi Pölking&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sally Knutson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sean Braxton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tony Sayre&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vivek Grady&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alan Haines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bart Pistole&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bill Tyler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Christine Abelman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Corey Catlett&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dean Braden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Don Jones&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gary Hansen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greg Tran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hilary Holden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jason Gross&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jim Epp&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Justin Ritter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Keith Herrera&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liz Thompson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maris LaWare&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maurice Satty&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paul Knutson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamara Manning&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toby Gnade&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trudy Brown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Amy Cox&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Annie Zypern&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barry Pond&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brian Moss&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carol Adams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christina Anderson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dan Lawera&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;David Philippe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Edward Hooks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Erin Mull&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greg Hansen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Janet Molinari&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;John Murray&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Justin Ellison&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kean Takahito&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Larry Tron&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Paige&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philip Fox&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rick Bensley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seth Vernon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tracy Zic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beth Paige&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carl Weiss&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dave Poirier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denny Blanton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ed Braxton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frank Olsen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Helen Abelman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;John Grady&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Julie Creighton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Matt Connell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Neola Schneider&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peter Bühler&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roger Barcio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sally Matthias&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sean Christensen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thomas Seio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Angele Hood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Art Foster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ben Peterman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brad Thomas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bryan Mills&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Christopher Schild&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Craig Leslie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Darren Powers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dorris liebe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emily Grady&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gene McClure&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harold Engle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ivan Liston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joy Bell-&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Karen Seio&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ken Brennan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Natalie Webber&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nora Preis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pauline Chand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sarah Foster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alex Grayson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ann Steele&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cari Sayre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charles Crestani&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chuck Magee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Denise Monton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;George Zrebassa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Harry Greene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joel Eaton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Julia Barnett&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Linda Southworth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lynn Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mathew Reese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michael Chen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Robert Barroso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ryan Akin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Scot Wooten&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sibella Parks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sung Chung&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andy Yotov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arianne Irving&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Becky Pak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brad Eason&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Christopher Conant&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Craig Carreira&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Darren Budd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Emily Burns&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Irene Maddox&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jim Radford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Karen Daniels&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kelly Williams&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lori Olson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mark Packer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Michelle Tran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nora Paige&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rachel Payne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roy Skaria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sarah Bern&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ted Trevino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adrian Barton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anne McFarland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barry Franz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beth Thompson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlos Daly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chris Cortes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Claire Gute&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;David Bremer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denny Joy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Erica Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frank Preis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grace Kelly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Helen Andreada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jane Waco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;John Huston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Julie Kriz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kunst Miller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Michael Moore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mitch Webber&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Neoma Murray&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peter Fuller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roger Demir&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sam Craven&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sean Miller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Susan Pistek&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tracy Collins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alan Hwang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bart Watters&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bobby Elias&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Corey Roper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dean Katz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Don Miller&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Hwang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laurel Workman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liz Willingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mark Cousins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Max Engle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Naresj Patel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noah Childs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paul Lucas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rick Reed&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roy Collins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Toby Ritter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Becky Castell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Christine Phan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Corey-Lock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dean percer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Don Weiss&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eugene Moren&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gary McGarr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guy Phonely&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jim Kriz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Karen Bern&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kelly Collister&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Logan Currie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Max Jones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nat Carroll&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Noel Staavos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pierre Wener&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rick Wilson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roy Französisch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shaun Chance&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Steven Roelle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toby Swindell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Art Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brad Norvell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bryan Davis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Craig Carroll&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Darren Koutras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Debra Catini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Emily Ducich&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Evan Henry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gene Hale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jim Sink&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joseph Holt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ken Black&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lena Creighton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luke Foster&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maya Herman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mick Brown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rob Dowd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sarah Brown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thais Sissman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ann Blume&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ben Wallace&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad McGuire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Christy Brittain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Craig Molinari&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Darrin Martin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Doug Bickford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emily Phan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Filia McAdams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;George Ashbrook&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jack Garza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joe Elijah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joy Daniels&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karl Braun&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ken Dana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lena Radford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luke Weiss&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mary Zewe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meg Tillman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nathan Cano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Odella Nelson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rob Lucas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russell Applegate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stuart Van&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tom Prescott&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Victor Preis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alan Barnes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amy Hunt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barry Weirich&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bill Shonely&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brian Stugart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carol Darley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;David Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Erin Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fred McMath&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greg Matthias&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jill Matthias&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;John Stevenson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kean Thornton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Stewart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rick Duston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shahid Collister&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steve Carroll&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tamara Chand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adrian Hane&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anne Pryor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barry Französisch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carlos Meador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chris McAfee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;David Flashing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denny Ordway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fred Chung&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grant Thornton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Janet Lee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;John Lee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Julie Prescott&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Katrina Willman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Larry Blacks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maria Zettner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Patrick Jones&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peter McVee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richard Bierner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tiffany House&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;William Brown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alex Russell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dave Brooks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Duane Benoit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eric Murdock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harry Marie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;James Galang&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Khloe Miller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Matt Abelman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neil Ducich&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Raymond Buch&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scott Cohen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Skye Norling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sung Pak&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Theresa Swint&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tony Chapman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alan Shonely&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andy Reiter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anthony Witt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Becky Martin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bruce Geld&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dario Medina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Deanra Eno&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guy Thornton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jay Fein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lela Donovan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Max Ludwig&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Michelle Moray&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nona Balk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paul Prost&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quincy Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roy Phan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shaun Weien&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Steven Ward&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Todd Boyes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Andrew Allen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bart Folk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bill Stewart&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brian Thompson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carol Triggs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;David Wiener&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liz Preis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phillina Ober&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rick Hansen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ross Baird&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steve Chapman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Troy Staebel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anna Chung&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astrea Jones&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carl Jackson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dennis Kane&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Duane Huffman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Erica Bern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frank Hawley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Heather Jas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;James Lanier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;John Castell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Julia West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Katherine Murray&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marc Crier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Matt Collins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michael Grace&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Neil Französisch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parhena Norris&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pete Kriz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Raymond Messe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Robert Marley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scott Williamson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sung Shariari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thomas Boland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tony Molinari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Etats-Unis&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_BA643A1843144AEA8989AC75B050A5AA'>
            <properties context=''>
              <relation connection='excel-direct.0canmlb1gxwn8g0zl583p1bgklh0' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10001:no:A1:U10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='People' id='People_6330B4C54EE043539A4DBF44E6179F34'>
            <properties context=''>
              <relation connection='excel-direct.0canmlb1gxwn8g0zl583p1bgklh0' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns' id='Returns_45BFAD73354842E5B7510D9EB324BD00'>
            <properties context=''>
              <relation connection='excel-direct.0canmlb1gxwn8g0zl583p1bgklh0' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_BA643A1843144AEA8989AC75B050A5AA' />
            <second-end-point object-id='People_6330B4C54EE043539A4DBF44E6179F34' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_BA643A1843144AEA8989AC75B050A5AA' />
            <second-end-point object-id='Returns_45BFAD73354842E5B7510D9EB324BD00' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filtre 1 (généré)' name='[Action1_E5F21E21242D42E99265004635727BD8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='DASHBOARD' type='sheet' worksheet='Worst 10 clients (profit)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='DASHBOARD' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Profit by category per year &amp; region'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.137ifgn0pnnl441h036lt14rbott' />
          </datasources>
          <datasource-dependencies datasource='federated.137ifgn0pnnl441h036lt14rbott'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.137ifgn0pnnl441h036lt14rbott].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action1_E5F21E21242D42E99265004635727BD8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Technology&quot;</bucket>
              <bucket>&quot;Office Supplies&quot;</bucket>
              <bucket>&quot;Furniture&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;West&quot;</bucket>
              <bucket>&quot;East&quot;</bucket>
              <bucket>&quot;Central&quot;</bucket>
              <bucket>&quot;South&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.137ifgn0pnnl441h036lt14rbott].[Action (Customer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.137ifgn0pnnl441h036lt14rbott].[none:Category:nk]' value='28' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.137ifgn0pnnl441h036lt14rbott].[sum:Profit:qk]</rows>
        <cols>([federated.137ifgn0pnnl441h036lt14rbott].[none:Category:nk] / ([federated.137ifgn0pnnl441h036lt14rbott].[yr:Order Date:ok] / [federated.137ifgn0pnnl441h036lt14rbott].[none:Region:nk]))</cols>
      </table>
      <simple-id uuid='{F55971D4-8AAA-40D7-9315-48FB4448B6AF}' />
    </worksheet>
    <worksheet name='Profit by region by year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.137ifgn0pnnl441h036lt14rbott' />
          </datasources>
          <datasource-dependencies datasource='federated.137ifgn0pnnl441h036lt14rbott'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.137ifgn0pnnl441h036lt14rbott].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action1_E5F21E21242D42E99265004635727BD8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;West&quot;</bucket>
              <bucket>&quot;East&quot;</bucket>
              <bucket>&quot;Central&quot;</bucket>
              <bucket>&quot;South&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.137ifgn0pnnl441h036lt14rbott].[Action (Customer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.137ifgn0pnnl441h036lt14rbott].[sum:Profit:qk]</rows>
        <cols>([federated.137ifgn0pnnl441h036lt14rbott].[none:Region:nk] / [federated.137ifgn0pnnl441h036lt14rbott].[yr:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{3E032B89-B643-4522-B5D3-3415D2287A55}' />
    </worksheet>
    <worksheet name='Profit by states'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.137ifgn0pnnl441h036lt14rbott' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.137ifgn0pnnl441h036lt14rbott'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.137ifgn0pnnl441h036lt14rbott].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action1_E5F21E21242D42E99265004635727BD8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.137ifgn0pnnl441h036lt14rbott].[Action (Customer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.137ifgn0pnnl441h036lt14rbott].[sum:Profit:qk]' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#ec7676</color>
                <color>#d9d9d9</color>
                <color>#76c4ec</color>
                <color>#00aaff</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.137ifgn0pnnl441h036lt14rbott].[sum:Profit:qk]' />
              <text column='[federated.137ifgn0pnnl441h036lt14rbott].[sum:Profit:qk]' />
              <lod column='[federated.137ifgn0pnnl441h036lt14rbott].[none:State:nk]' />
              <geometry column='[federated.137ifgn0pnnl441h036lt14rbott].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.137ifgn0pnnl441h036lt14rbott].[Latitude (generated)]</rows>
        <cols>[federated.137ifgn0pnnl441h036lt14rbott].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{37AB156F-9FBB-4CF3-B647-1EEF0608E4CE}' />
    </worksheet>
    <worksheet name='Profit by subcategory per year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.137ifgn0pnnl441h036lt14rbott' />
          </datasources>
          <datasource-dependencies datasource='federated.137ifgn0pnnl441h036lt14rbott'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.137ifgn0pnnl441h036lt14rbott].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action1_E5F21E21242D42E99265004635727BD8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.137ifgn0pnnl441h036lt14rbott].[Action (Customer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.137ifgn0pnnl441h036lt14rbott].[sum:Profit:qk]</rows>
        <cols>([federated.137ifgn0pnnl441h036lt14rbott].[yr:Order Date:ok] / [federated.137ifgn0pnnl441h036lt14rbott].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{498F46EA-997E-4FB8-A3BD-4C8C344F1C93}' />
    </worksheet>
    <worksheet name='Sales by region by year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.137ifgn0pnnl441h036lt14rbott' />
          </datasources>
          <datasource-dependencies datasource='federated.137ifgn0pnnl441h036lt14rbott'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;West&quot;</bucket>
              <bucket>&quot;East&quot;</bucket>
              <bucket>&quot;Central&quot;</bucket>
              <bucket>&quot;South&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.137ifgn0pnnl441h036lt14rbott].[sum:Sales:qk]</rows>
        <cols>([federated.137ifgn0pnnl441h036lt14rbott].[none:Region:nk] / [federated.137ifgn0pnnl441h036lt14rbott].[yr:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{6ED82C51-9437-4BB5-AC36-60485F3DC516}' />
    </worksheet>
    <worksheet name='Sales by states'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales by states</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.137ifgn0pnnl441h036lt14rbott' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.137ifgn0pnnl441h036lt14rbott'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.137ifgn0pnnl441h036lt14rbott].[Longitude (generated)]' field-type='quantitative' max='-7066207.1505832719' min='-14175336.120396513' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.137ifgn0pnnl441h036lt14rbott].[Latitude (generated)]' field-type='quantitative' max='6630856.3074849946' min='2461592.5035967706' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.137ifgn0pnnl441h036lt14rbott].[sum:Sales:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#55aaff</color>
                <color>#9dc4ec</color>
                <color>#d9d9d9</color>
                <color>#ec7676</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.137ifgn0pnnl441h036lt14rbott].[sum:Sales:qk]' />
              <text column='[federated.137ifgn0pnnl441h036lt14rbott].[sum:Sales:qk]' />
              <lod column='[federated.137ifgn0pnnl441h036lt14rbott].[none:State:nk]' />
              <geometry column='[federated.137ifgn0pnnl441h036lt14rbott].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.137ifgn0pnnl441h036lt14rbott].[Latitude (generated)]</rows>
        <cols>[federated.137ifgn0pnnl441h036lt14rbott].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F686E575-FF61-4433-968C-CBEE2F535FB2}' />
    </worksheet>
    <worksheet name='Sales/profit client'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.137ifgn0pnnl441h036lt14rbott' />
          </datasources>
          <datasource-dependencies datasource='federated.137ifgn0pnnl441h036lt14rbott'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.137ifgn0pnnl441h036lt14rbott].[sum:Sales:qk]' included-values='in-range'>
            <min>12000.0</min>
            <max>25043.049999999999</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.137ifgn0pnnl441h036lt14rbott].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.137ifgn0pnnl441h036lt14rbott].[sum:Sales:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.137ifgn0pnnl441h036lt14rbott].[sum:Sales:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.137ifgn0pnnl441h036lt14rbott].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.137ifgn0pnnl441h036lt14rbott].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]</rows>
        <cols>([federated.137ifgn0pnnl441h036lt14rbott].[sum:Sales:qk] + [federated.137ifgn0pnnl441h036lt14rbott].[sum:Profit:qk])</cols>
      </table>
      <simple-id uuid='{23D5C5C0-116C-4C37-928A-AFEEA788886B}' />
    </worksheet>
    <worksheet name='Top 10 clients (profit)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.137ifgn0pnnl441h036lt14rbott' />
          </datasources>
          <datasource-dependencies datasource='federated.137ifgn0pnnl441h036lt14rbott'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.137ifgn0pnnl441h036lt14rbott].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action1_E5F21E21242D42E99265004635727BD8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.137ifgn0pnnl441h036lt14rbott].[sum:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]</column>
            <column>[federated.137ifgn0pnnl441h036lt14rbott].[Action (Customer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]</rows>
        <cols>[federated.137ifgn0pnnl441h036lt14rbott].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{FFDCFFC0-76D9-493F-ACFD-BE7282E1BD7F}' />
    </worksheet>
    <worksheet name='Top 10 clients (sales)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.137ifgn0pnnl441h036lt14rbott' />
          </datasources>
          <datasource-dependencies datasource='federated.137ifgn0pnnl441h036lt14rbott'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.137ifgn0pnnl441h036lt14rbott].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]</rows>
        <cols>[federated.137ifgn0pnnl441h036lt14rbott].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{58966ADF-B512-4AB2-B572-B65AB5573E6A}' />
    </worksheet>
    <worksheet name='What decrease profit and where'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.137ifgn0pnnl441h036lt14rbott' />
          </datasources>
          <datasource-dependencies datasource='federated.137ifgn0pnnl441h036lt14rbott'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;West&quot;</bucket>
              <bucket>&quot;East&quot;</bucket>
              <bucket>&quot;Central&quot;</bucket>
              <bucket>&quot;South&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.137ifgn0pnnl441h036lt14rbott].[sum:Profit:qk]' included-values='in-range'>
            <min>-14705.073799999996</min>
            <max>0.0</max>
          </filter>
          <slices>
            <column>[federated.137ifgn0pnnl441h036lt14rbott].[sum:Profit:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.137ifgn0pnnl441h036lt14rbott].[sum:Profit:qk]</rows>
        <cols>([federated.137ifgn0pnnl441h036lt14rbott].[none:State:nk] / [federated.137ifgn0pnnl441h036lt14rbott].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{D387FE38-9F01-4E63-BE02-7E81464E172C}' />
    </worksheet>
    <worksheet name='Worst 10 clients (profit)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.137ifgn0pnnl441h036lt14rbott' />
          </datasources>
          <datasource-dependencies datasource='federated.137ifgn0pnnl441h036lt14rbott'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Aaron Bergman&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Zuschuss Donatelli&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
              <bucket>&quot;Grant Thornton&quot;</bucket>
              <bucket>&quot;Luke Foster&quot;</bucket>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
              <bucket>&quot;Nathan Cano&quot;</bucket>
              <bucket>&quot;Sean Braxton&quot;</bucket>
              <bucket>&quot;Sean Miller&quot;</bucket>
              <bucket>&quot;Christine Phan&quot;</bucket>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
              <bucket>&quot;Becky Martin&quot;</bucket>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
              <bucket>&quot;Dan Campbell&quot;</bucket>
              <bucket>&quot;David Bremer&quot;</bucket>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
              <bucket>&quot;Tom Prescott&quot;</bucket>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
              <bucket>&quot;Olvera Toch&quot;</bucket>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
              <bucket>&quot;Paul Knutson&quot;</bucket>
              <bucket>&quot;Jim Radford&quot;</bucket>
              <bucket>&quot;Skye Norling&quot;</bucket>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
              <bucket>&quot;Joseph Holt&quot;</bucket>
              <bucket>&quot;Peter Fuller&quot;</bucket>
              <bucket>&quot;Gary Hansen&quot;</bucket>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
              <bucket>&quot;Michelle Moray&quot;</bucket>
              <bucket>&quot;Michael Grace&quot;</bucket>
              <bucket>&quot;Ross Baird&quot;</bucket>
              <bucket>&quot;Ryan Akin&quot;</bucket>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
              <bucket>&quot;Alan Haines&quot;</bucket>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
              <bucket>&quot;Alex Avila&quot;</bucket>
              <bucket>&quot;Noah Childs&quot;</bucket>
              <bucket>&quot;Christopher Schild&quot;</bucket>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
              <bucket>&quot;Beth Paige&quot;</bucket>
              <bucket>&quot;Linda Southworth&quot;</bucket>
              <bucket>&quot;Sam Craven&quot;</bucket>
              <bucket>&quot;Joy Smith&quot;</bucket>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
              <bucket>&quot;Troy Staebel&quot;</bucket>
              <bucket>&quot;Barry Franz&quot;</bucket>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
              <bucket>&quot;Ann Blume&quot;</bucket>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
              <bucket>&quot;John Dryer&quot;</bucket>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
              <bucket>&quot;David Flashing&quot;</bucket>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
              <bucket>&quot;Anna Gayman&quot;</bucket>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
              <bucket>&quot;Noel Staavos&quot;</bucket>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
              <bucket>&quot;Alex Russell&quot;</bucket>
              <bucket>&quot;Jack Lebron&quot;</bucket>
              <bucket>&quot;Carol Darley&quot;</bucket>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
              <bucket>&quot;Amy Hunt&quot;</bucket>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
              <bucket>&quot;Toby Swindell&quot;</bucket>
              <bucket>&quot;Pauline Chand&quot;</bucket>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
              <bucket>&quot;Randy Bradley&quot;</bucket>
              <bucket>&quot;Art Foster&quot;</bucket>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
              <bucket>&quot;Sibella Parks&quot;</bucket>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
              <bucket>&quot;Darren Koutras&quot;</bucket>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
              <bucket>&quot;Gene Hale&quot;</bucket>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
              <bucket>&quot;David Wiener&quot;</bucket>
              <bucket>&quot;Michael Oakman&quot;</bucket>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Edward Becker&quot;</bucket>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
              <bucket>&quot;Maris LaWare&quot;</bucket>
              <bucket>&quot;Sung Shariari&quot;</bucket>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
              <bucket>&quot;Barry Weirich&quot;</bucket>
              <bucket>&quot;Jim Sink&quot;</bucket>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
              <bucket>&quot;Vivek Grady&quot;</bucket>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
              <bucket>&quot;Phillina Ober&quot;</bucket>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
              <bucket>&quot;Carlos Meador&quot;</bucket>
              <bucket>&quot;David Philippe&quot;</bucket>
              <bucket>&quot;Denny Ordway&quot;</bucket>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
              <bucket>&quot;Anna Chung&quot;</bucket>
              <bucket>&quot;Sally Matthias&quot;</bucket>
              <bucket>&quot;Nick Radford&quot;</bucket>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
              <bucket>&quot;Michelle Tran&quot;</bucket>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
              <bucket>&quot;Pete Takahito&quot;</bucket>
              <bucket>&quot;Scot Wooten&quot;</bucket>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
              <bucket>&quot;Bill Stewart&quot;</bucket>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
              <bucket>&quot;Neola Schneider&quot;</bucket>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
              <bucket>&quot;Guy Thornton&quot;</bucket>
              <bucket>&quot;Odella Nelson&quot;</bucket>
              <bucket>&quot;Greg Hansen&quot;</bucket>
              <bucket>&quot;Alex Grayson&quot;</bucket>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
              <bucket>&quot;Thais Sissman&quot;</bucket>
              <bucket>&quot;Adrian Hane&quot;</bucket>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
              <bucket>&quot;Paul Lucas&quot;</bucket>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
              <bucket>&quot;Karen Seio&quot;</bucket>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
              <bucket>&quot;Lela Donovan&quot;</bucket>
              <bucket>&quot;Eric Barreto&quot;</bucket>
              <bucket>&quot;Carl Jackson&quot;</bucket>
              <bucket>&quot;Jason Gross&quot;</bucket>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
              <bucket>&quot;George Bell&quot;</bucket>
              <bucket>&quot;Roy Skaria&quot;</bucket>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
              <bucket>&quot;Tony Sayre&quot;</bucket>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Larry Hughes&quot;</bucket>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
              <bucket>&quot;Ed Braxton&quot;</bucket>
              <bucket>&quot;Susan Pistek&quot;</bucket>
              <bucket>&quot;Larry Blacks&quot;</bucket>
              <bucket>&quot;Melanie Seite&quot;</bucket>
              <bucket>&quot;Janet Martin&quot;</bucket>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
              <bucket>&quot;Adrian Shami&quot;</bucket>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
              <bucket>&quot;John Huston&quot;</bucket>
              <bucket>&quot;Joy Daniels&quot;</bucket>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
              <bucket>&quot;Roland Murray&quot;</bucket>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
              <bucket>&quot;Sung Chung&quot;</bucket>
              <bucket>&quot;Guy Phonely&quot;</bucket>
              <bucket>&quot;Laurel Workman&quot;</bucket>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
              <bucket>&quot;Alan Shonely&quot;</bucket>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
              <bucket>&quot;Greg Matthias&quot;</bucket>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
              <bucket>&quot;Brad Norvell&quot;</bucket>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
              <bucket>&quot;Erin Mull&quot;</bucket>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
              <bucket>&quot;Tom Stivers&quot;</bucket>
              <bucket>&quot;Karl Braun&quot;</bucket>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
              <bucket>&quot;Janet Lee&quot;</bucket>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
              <bucket>&quot;Michael Stewart&quot;</bucket>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
              <bucket>&quot;Larry Tron&quot;</bucket>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
              <bucket>&quot;Rachel Payne&quot;</bucket>
              <bucket>&quot;Astrea Jones&quot;</bucket>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
              <bucket>&quot;Roy Collins&quot;</bucket>
              <bucket>&quot;Chuck Magee&quot;</bucket>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
              <bucket>&quot;Anthony Witt&quot;</bucket>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
              <bucket>&quot;Steven Ward&quot;</bucket>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
              <bucket>&quot;Don Weiss&quot;</bucket>
              <bucket>&quot;Robert Barroso&quot;</bucket>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
              <bucket>&quot;Max Engle&quot;</bucket>
              <bucket>&quot;Michael Moore&quot;</bucket>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
              <bucket>&quot;Angele Hood&quot;</bucket>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
              <bucket>&quot;Shui Tom&quot;</bucket>
              <bucket>&quot;Maria Zettner&quot;</bucket>
              <bucket>&quot;Neil Französisch&quot;</bucket>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
              <bucket>&quot;Hilary Holden&quot;</bucket>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
              <bucket>&quot;Khloe Miller&quot;</bucket>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
              <bucket>&quot;Tiffany House&quot;</bucket>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
              <bucket>&quot;Brendan Murry&quot;</bucket>
              <bucket>&quot;Sean Wendt&quot;</bucket>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
              <bucket>&quot;Erin Creighton&quot;</bucket>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
              <bucket>&quot;Heather Jas&quot;</bucket>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
              <bucket>&quot;Helen Andreada&quot;</bucket>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
              <bucket>&quot;Eric Murdock&quot;</bucket>
              <bucket>&quot;Andy Yotov&quot;</bucket>
              <bucket>&quot;Emily Grady&quot;</bucket>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
              <bucket>&quot;Kelly Williams&quot;</bucket>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
              <bucket>&quot;Dario Medina&quot;</bucket>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
              <bucket>&quot;Bart Folk&quot;</bucket>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
              <bucket>&quot;Jill Matthias&quot;</bucket>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
              <bucket>&quot;Duane Huffman&quot;</bucket>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
              <bucket>&quot;Nona Balk&quot;</bucket>
              <bucket>&quot;Mick Brown&quot;</bucket>
              <bucket>&quot;Tony Chapman&quot;</bucket>
              <bucket>&quot;Bruce Geld&quot;</bucket>
              <bucket>&quot;Neil Knudson&quot;</bucket>
              <bucket>&quot;Mike Caudle&quot;</bucket>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
              <bucket>&quot;Julie Kriz&quot;</bucket>
              <bucket>&quot;Joy Bell-&quot;</bucket>
              <bucket>&quot;Brad Thomas&quot;</bucket>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
              <bucket>&quot;Debra Catini&quot;</bucket>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
              <bucket>&quot;Ann Steele&quot;</bucket>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
              <bucket>&quot;Bryan Mills&quot;</bucket>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
              <bucket>&quot;Brad Eason&quot;</bucket>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
              <bucket>&quot;Bryan Davis&quot;</bucket>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
              <bucket>&quot;Brian Derr&quot;</bucket>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
              <bucket>&quot;Chad Sievert&quot;</bucket>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
              <bucket>&quot;Corey Roper&quot;</bucket>
              <bucket>&quot;Emily Phan&quot;</bucket>
              <bucket>&quot;Harry Greene&quot;</bucket>
              <bucket>&quot;Lori Olson&quot;</bucket>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
              <bucket>&quot;Erica Hackney&quot;</bucket>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
              <bucket>&quot;Julia West&quot;</bucket>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
              <bucket>&quot;Annie Zypern&quot;</bucket>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
              <bucket>&quot;Sarah Bern&quot;</bucket>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
              <bucket>&quot;Carol Triggs&quot;</bucket>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
              <bucket>&quot;Erica Bern&quot;</bucket>
              <bucket>&quot;Mathew Reese&quot;</bucket>
              <bucket>&quot;David Smith&quot;</bucket>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
              <bucket>&quot;Sally Knutson&quot;</bucket>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
              <bucket>&quot;Claire Gute&quot;</bucket>
              <bucket>&quot;Dean Braden&quot;</bucket>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
              <bucket>&quot;Michael Granlund&quot;</bucket>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
              <bucket>&quot;Dorris liebe&quot;</bucket>
              <bucket>&quot;Craig Molinari&quot;</bucket>
              <bucket>&quot;Duane Benoit&quot;</bucket>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
              <bucket>&quot;Cari Sayre&quot;</bucket>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
              <bucket>&quot;Craig Carreira&quot;</bucket>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
              <bucket>&quot;Fred McMath&quot;</bucket>
              <bucket>&quot;Parhena Norris&quot;</bucket>
              <bucket>&quot;Liz Willingham&quot;</bucket>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
              <bucket>&quot;Kean Thornton&quot;</bucket>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
              <bucket>&quot;Matt Connell&quot;</bucket>
              <bucket>&quot;Philip Fox&quot;</bucket>
              <bucket>&quot;Frank Merwin&quot;</bucket>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
              <bucket>&quot;Stuart Van&quot;</bucket>
              <bucket>&quot;Don Miller&quot;</bucket>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
              <bucket>&quot;Julia Barnett&quot;</bucket>
              <bucket>&quot;Julie Creighton&quot;</bucket>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
              <bucket>&quot;Victor Preis&quot;</bucket>
              <bucket>&quot;Corey-Lock&quot;</bucket>
              <bucket>&quot;John Grady&quot;</bucket>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
              <bucket>&quot;Roger Demir&quot;</bucket>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
              <bucket>&quot;James Lanier&quot;</bucket>
              <bucket>&quot;Barry Pond&quot;</bucket>
              <bucket>&quot;Dean Katz&quot;</bucket>
              <bucket>&quot;Matt Collins&quot;</bucket>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
              <bucket>&quot;Darren Budd&quot;</bucket>
              <bucket>&quot;Candace McMahon&quot;</bucket>
              <bucket>&quot;Frank Olsen&quot;</bucket>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
              <bucket>&quot;Tracy Collins&quot;</bucket>
              <bucket>&quot;Peter Bühler&quot;</bucket>
              <bucket>&quot;Toby Ritter&quot;</bucket>
              <bucket>&quot;Alan Barnes&quot;</bucket>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
              <bucket>&quot;Joel Eaton&quot;</bucket>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
              <bucket>&quot;Tracy Zic&quot;</bucket>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
              <bucket>&quot;John Lee&quot;</bucket>
              <bucket>&quot;Craig Leslie&quot;</bucket>
              <bucket>&quot;Sean Christensen&quot;</bucket>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
              <bucket>&quot;Logan Currie&quot;</bucket>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
              <bucket>&quot;Shahid Collister&quot;</bucket>
              <bucket>&quot;Maya Herman&quot;</bucket>
              <bucket>&quot;Brian Stugart&quot;</bucket>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
              <bucket>&quot;Darren Powers&quot;</bucket>
              <bucket>&quot;Evan Henry&quot;</bucket>
              <bucket>&quot;Roger Barcio&quot;</bucket>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
              <bucket>&quot;Christine Abelman&quot;</bucket>
              <bucket>&quot;Erin Smith&quot;</bucket>
              <bucket>&quot;Ben Wallace&quot;</bucket>
              <bucket>&quot;Maurice Satty&quot;</bucket>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
              <bucket>&quot;Filia McAdams&quot;</bucket>
              <bucket>&quot;David Kendrick&quot;</bucket>
              <bucket>&quot;Becky Castell&quot;</bucket>
              <bucket>&quot;Kean Takahito&quot;</bucket>
              <bucket>&quot;Bill Tyler&quot;</bucket>
              <bucket>&quot;Tim Brockman&quot;</bucket>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
              <bucket>&quot;Theresa Swint&quot;</bucket>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
              <bucket>&quot;Emily Burns&quot;</bucket>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
              <bucket>&quot;Todd Boyes&quot;</bucket>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
              <bucket>&quot;Helen Abelman&quot;</bucket>
              <bucket>&quot;Christy Brittain&quot;</bucket>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
              <bucket>&quot;Harold Engle&quot;</bucket>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
              <bucket>&quot;Allen Armold&quot;</bucket>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
              <bucket>&quot;John Castell&quot;</bucket>
              <bucket>&quot;Christina Anderson&quot;</bucket>
              <bucket>&quot;Roy Französisch&quot;</bucket>
              <bucket>&quot;Philip Brown&quot;</bucket>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
              <bucket>&quot;Adam Hart&quot;</bucket>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
              <bucket>&quot;Anne Pryor&quot;</bucket>
              <bucket>&quot;Sarah Foster&quot;</bucket>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
              <bucket>&quot;Matt Collister&quot;</bucket>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
              <bucket>&quot;Tony Molinari&quot;</bucket>
              <bucket>&quot;Ken Brennan&quot;</bucket>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
              <bucket>&quot;Ann Chong&quot;</bucket>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
              <bucket>&quot;Barry Französisch&quot;</bucket>
              <bucket>&quot;Russell Applegate&quot;</bucket>
              <bucket>&quot;Craig Reiter&quot;</bucket>
              <bucket>&quot;Julie Prescott&quot;</bucket>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
              <bucket>&quot;Art Ferguson&quot;</bucket>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
              <bucket>&quot;Liz Thompson&quot;</bucket>
              <bucket>&quot;Dan Lawera&quot;</bucket>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
              <bucket>&quot;Jay Fein&quot;</bucket>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
              <bucket>&quot;Corey Catlett&quot;</bucket>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
              <bucket>&quot;Scott Williamson&quot;</bucket>
              <bucket>&quot;Dean percer&quot;</bucket>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
              <bucket>&quot;Liz Preis&quot;</bucket>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
              <bucket>&quot;Don Jones&quot;</bucket>
              <bucket>&quot;Gary McGarr&quot;</bucket>
              <bucket>&quot;Lynn Smith&quot;</bucket>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
              <bucket>&quot;Ben Peterman&quot;</bucket>
              <bucket>&quot;Chris McAfee&quot;</bucket>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
              <bucket>&quot;Steve Carroll&quot;</bucket>
              <bucket>&quot;Carl Weiss&quot;</bucket>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
              <bucket>&quot;Dennis Kane&quot;</bucket>
              <bucket>&quot;Shaun Chance&quot;</bucket>
              <bucket>&quot;Trudy Brown&quot;</bucket>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
              <bucket>&quot;Raymond Messe&quot;</bucket>
              <bucket>&quot;Charles Crestani&quot;</bucket>
              <bucket>&quot;Chris Cortes&quot;</bucket>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
              <bucket>&quot;Frank Preis&quot;</bucket>
              <bucket>&quot;Chad McGuire&quot;</bucket>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
              <bucket>&quot;Max Ludwig&quot;</bucket>
              <bucket>&quot;Beth Thompson&quot;</bucket>
              <bucket>&quot;Chuck Clark&quot;</bucket>
              <bucket>&quot;Carlos Daly&quot;</bucket>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
              <bucket>&quot;Bart Pistole&quot;</bucket>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
              <bucket>&quot;Andrew Allen&quot;</bucket>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Doug Bickford&quot;</bucket>
              <bucket>&quot;Denny Blanton&quot;</bucket>
              <bucket>&quot;Scot Coram&quot;</bucket>
              <bucket>&quot;Gene McClure&quot;</bucket>
              <bucket>&quot;Patrick Jones&quot;</bucket>
              <bucket>&quot;Neil Ducich&quot;</bucket>
              <bucket>&quot;Brian Thompson&quot;</bucket>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
              <bucket>&quot;Justin Ritter&quot;</bucket>
              <bucket>&quot;Katharine Harms&quot;</bucket>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
              <bucket>&quot;Monica Federle&quot;</bucket>
              <bucket>&quot;Marc Crier&quot;</bucket>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
              <bucket>&quot;Deanra Eno&quot;</bucket>
              <bucket>&quot;Resi Pölking&quot;</bucket>
              <bucket>&quot;Dave Brooks&quot;</bucket>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
              <bucket>&quot;Richard Bierner&quot;</bucket>
              <bucket>&quot;Rick Duston&quot;</bucket>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
              <bucket>&quot;Denny Joy&quot;</bucket>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
              <bucket>&quot;Rob Lucas&quot;</bucket>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
              <bucket>&quot;Janet Molinari&quot;</bucket>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
              <bucket>&quot;Meg Tillman&quot;</bucket>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
              <bucket>&quot;Nora Paige&quot;</bucket>
              <bucket>&quot;Irene Maddox&quot;</bucket>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
              <bucket>&quot;Peter McVee&quot;</bucket>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
              <bucket>&quot;Lena Radford&quot;</bucket>
              <bucket>&quot;Dave Kipp&quot;</bucket>
              <bucket>&quot;Ken Dana&quot;</bucket>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
              <bucket>&quot;Duane Noonan&quot;</bucket>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
              <bucket>&quot;Dave Poirier&quot;</bucket>
              <bucket>&quot;Rick Hansen&quot;</bucket>
              <bucket>&quot;John Stevenson&quot;</bucket>
              <bucket>&quot;Sung Pak&quot;</bucket>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
              <bucket>&quot;Tamara Manning&quot;</bucket>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
              <bucket>&quot;Ken Black&quot;</bucket>
              <bucket>&quot;Nat Carroll&quot;</bucket>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
              <bucket>&quot;Roy Phan&quot;</bucket>
              <bucket>&quot;Mark Packer&quot;</bucket>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
              <bucket>&quot;Steve Chapman&quot;</bucket>
              <bucket>&quot;Xylona Preis&quot;</bucket>
              <bucket>&quot;Nora Preis&quot;</bucket>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
              <bucket>&quot;Michael Paige&quot;</bucket>
              <bucket>&quot;Rick Bensley&quot;</bucket>
              <bucket>&quot;Becky Pak&quot;</bucket>
              <bucket>&quot;Keith Herrera&quot;</bucket>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
              <bucket>&quot;Emily Ducich&quot;</bucket>
              <bucket>&quot;Scott Cohen&quot;</bucket>
              <bucket>&quot;Toby Gnade&quot;</bucket>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
              <bucket>&quot;Jack Garza&quot;</bucket>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
              <bucket>&quot;Michael Chen&quot;</bucket>
              <bucket>&quot;Rob Williams&quot;</bucket>
              <bucket>&quot;Fred Harton&quot;</bucket>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
              <bucket>&quot;Kelly Collister&quot;</bucket>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
              <bucket>&quot;Fred Chung&quot;</bucket>
              <bucket>&quot;William Brown&quot;</bucket>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
              <bucket>&quot;Rick Reed&quot;</bucket>
              <bucket>&quot;Ken Heidel&quot;</bucket>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
              <bucket>&quot;Rob Dowd&quot;</bucket>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
              <bucket>&quot;Kunst Miller&quot;</bucket>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
              <bucket>&quot;Ted Trevino&quot;</bucket>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
              <bucket>&quot;Bobby Elias&quot;</bucket>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
              <bucket>&quot;Karen Bern&quot;</bucket>
              <bucket>&quot;John Lucas&quot;</bucket>
              <bucket>&quot;Mary Zewe&quot;</bucket>
              <bucket>&quot;Neoma Murray&quot;</bucket>
              <bucket>&quot;Justin Ellison&quot;</bucket>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
              <bucket>&quot;Shaun Weien&quot;</bucket>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
              <bucket>&quot;Pauline Webber&quot;</bucket>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
              <bucket>&quot;George Zrebassa&quot;</bucket>
              <bucket>&quot;Thomas Boland&quot;</bucket>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
              <bucket>&quot;Luke Weiss&quot;</bucket>
              <bucket>&quot;George Ashbrook&quot;</bucket>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
              <bucket>&quot;Craig Carroll&quot;</bucket>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
              <bucket>&quot;Thomas Seio&quot;</bucket>
              <bucket>&quot;Arianne Irving&quot;</bucket>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
              <bucket>&quot;Sarah Brown&quot;</bucket>
              <bucket>&quot;Bart Watters&quot;</bucket>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
              <bucket>&quot;Katherine Murray&quot;</bucket>
              <bucket>&quot;Annie Thurman&quot;</bucket>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
              <bucket>&quot;Erica Smith&quot;</bucket>
              <bucket>&quot;Sample Company A&quot;</bucket>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
              <bucket>&quot;Natalie Webber&quot;</bucket>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
              <bucket>&quot;Max Jones&quot;</bucket>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
              <bucket>&quot;Frank Hawley&quot;</bucket>
              <bucket>&quot;Anne McFarland&quot;</bucket>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
              <bucket>&quot;Karen Daniels&quot;</bucket>
              <bucket>&quot;Ivan Liston&quot;</bucket>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
              <bucket>&quot;Carol Adams&quot;</bucket>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
              <bucket>&quot;Jim Kriz&quot;</bucket>
              <bucket>&quot;Gary Hwang&quot;</bucket>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
              <bucket>&quot;Harold Ryan&quot;</bucket>
              <bucket>&quot;Seth Vernon&quot;</bucket>
              <bucket>&quot;Quincy Jones&quot;</bucket>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
              <bucket>&quot;Naresj Patel&quot;</bucket>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
              <bucket>&quot;Mitch Webber&quot;</bucket>
              <bucket>&quot;Matt Abelman&quot;</bucket>
              <bucket>&quot;Joe Elijah&quot;</bucket>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
              <bucket>&quot;Lena Creighton&quot;</bucket>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
              <bucket>&quot;Pierre Wener&quot;</bucket>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
              <bucket>&quot;Alan Hwang&quot;</bucket>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
              <bucket>&quot;Denise Monton&quot;</bucket>
              <bucket>&quot;Eugene Moren&quot;</bucket>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
              <bucket>&quot;Amy Cox&quot;</bucket>
              <bucket>&quot;Edward Hooks&quot;</bucket>
              <bucket>&quot;James Galang&quot;</bucket>
              <bucket>&quot;Grace Kelly&quot;</bucket>
              <bucket>&quot;Bill Eplett&quot;</bucket>
              <bucket>&quot;Paul Prost&quot;</bucket>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
              <bucket>&quot;John Murray&quot;</bucket>
              <bucket>&quot;Rick Wilson&quot;</bucket>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
              <bucket>&quot;Jim Epp&quot;</bucket>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
              <bucket>&quot;Darrin Martin&quot;</bucket>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
              <bucket>&quot;Katrina Willman&quot;</bucket>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
              <bucket>&quot;Mark Cousins&quot;</bucket>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
              <bucket>&quot;Robert Marley&quot;</bucket>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
              <bucket>&quot;Steven Roelle&quot;</bucket>
              <bucket>&quot;Pete Kriz&quot;</bucket>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
              <bucket>&quot;Greg Tran&quot;</bucket>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
              <bucket>&quot;Jane Waco&quot;</bucket>
              <bucket>&quot;Christopher Conant&quot;</bucket>
              <bucket>&quot;Brian Moss&quot;</bucket>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
              <bucket>&quot;Harry Marie&quot;</bucket>
              <bucket>&quot;Bill Shonely&quot;</bucket>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
              <bucket>&quot;Andy Reiter&quot;</bucket>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
              <bucket>&quot;Adrian Barton&quot;</bucket>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
              <bucket>&quot;Raymond Buch&quot;</bucket>
              <bucket>&quot;Tamara Chand&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]</rows>
        <cols>[federated.137ifgn0pnnl441h036lt14rbott].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{5B572299-0706-4B2D-8878-0404DCD0C669}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='DASHBOARD'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='70133' id='14' param='horz' type-v2='layout-flow' w='99050' x='475' y='885'>
            <zone h='70133' id='12' type-v2='layout-basic' w='99050' x='475' y='885'>
              <zone h='5131' id='9' param='horz' type-v2='layout-flow' w='99050' x='475' y='885'>
                <zone h='5131' id='7' type-v2='layout-basic' w='99050' x='475' y='885'>
                  <zone forceUpdate='true' h='5131' id='10' type-v2='text' w='99050' x='475' y='885'>
                    <formatted-text>
                      <run bold='true' fontcolor='#000000' fontsize='28'>&lt;</run>
                      <run bold='true' fontcolor='#000000' fontsize='28'>Sheet Name</run>
                      <run bold='true' fontcolor='#000000' fontsize='28'>&gt;</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='32501' id='11' name='Profit by states' w='47146' x='475' y='6016'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22484' id='16' name='Profit by region by year' w='51904' x='47621' y='6016'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32501' id='18' name='Profit by category per year &amp; region' w='47146' x='475' y='38517'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42518' id='19' name='Profit by subcategory per year' w='51904' x='47621' y='28500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='28097' id='21' name='Top 10 clients (profit)' w='44773' x='475' y='71018'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='28097' id='23' name='Worst 10 clients (profit)' w='54277' x='45248' y='71018'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98230' id='30' param='vert' type-v2='layout-flow' w='99050' x='475' y='885'>
                <zone forceUpdate='true' h='5131' id='10' type-v2='text' w='99050' x='475' y='885'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='28'>&lt;</run>
                    <run bold='true' fontcolor='#000000' fontsize='28'>Sheet Name</run>
                    <run bold='true' fontcolor='#000000' fontsize='28'>&gt;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='252' h='32501' id='11' is-fixed='true' name='Profit by states' w='47146' x='475' y='6016'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='172' h='22484' id='16' is-fixed='true' name='Profit by region by year' w='51904' x='47621' y='6016'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42518' id='19' is-fixed='true' name='Profit by subcategory per year' w='51904' x='47621' y='28500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='252' h='32501' id='18' is-fixed='true' name='Profit by category per year &amp; region' w='47146' x='475' y='38517'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='28097' id='21' is-fixed='true' name='Top 10 clients (profit)' w='44773' x='475' y='71018'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='28097' id='23' is-fixed='true' name='Worst 10 clients (profit)' w='54277' x='45248' y='71018'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{77974000-00BA-4E01-8A30-666C9DB03356}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sales by states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.137ifgn0pnnl441h036lt14rbott].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[none:State:nk]</field>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{35D466CF-CF3C-481A-8AAF-F43729B7A705}' />
    </window>
    <window class='worksheet' name='Profit by states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.137ifgn0pnnl441h036lt14rbott].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A8A5D80-8FA6-4EF4-BF81-8C26A2CBB232}' />
    </window>
    <window class='worksheet' name='Sales by region by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.137ifgn0pnnl441h036lt14rbott].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[none:Country/Region:nk]</field>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2DE12F8-976B-4402-A81F-039168FECE48}' />
    </window>
    <window class='worksheet' name='What decrease profit and where'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.137ifgn0pnnl441h036lt14rbott].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[none:Country/Region:nk]</field>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[none:State:nk]</field>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[none:Sub-Category:nk]</field>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E0C5CEC-A225-4E6A-BC14-50944802A2E4}' />
    </window>
    <window class='worksheet' name='Profit by region by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.137ifgn0pnnl441h036lt14rbott].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59299458-4457-49E9-9C24-784B047ED4D3}' />
    </window>
    <window class='worksheet' name='Profit by category per year &amp; region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.137ifgn0pnnl441h036lt14rbott].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[none:Category:nk]</field>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[none:Country/Region:nk]</field>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[none:Region:nk]</field>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76DF7B5B-088A-4AD3-92DA-E02E6BB40011}' />
    </window>
    <window class='worksheet' name='Profit by subcategory per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.137ifgn0pnnl441h036lt14rbott].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[none:Sub-Category:nk]</field>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95FC2667-5C7E-4605-B543-9C5A2E637CBF}' />
    </window>
    <window class='worksheet' name='Top 10 clients (sales)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF1B48EF-A89D-44FA-8BAC-B31612A2872A}' />
    </window>
    <window class='worksheet' name='Top 10 clients (profit)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BEC077B-AA80-4CE3-988B-AF1A182B85A6}' />
    </window>
    <window class='worksheet' name='Worst 10 clients (profit)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5BAE8A48-9A42-40B7-BF71-532D599C945F}' />
    </window>
    <window class='worksheet' name='Sales/profit client'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='2' param='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D56B93C-D8A0-4CFC-BD70-EA0AE69984D6}' />
    </window>
    <window class='dashboard' maximized='true' name='DASHBOARD'>
      <viewpoints>
        <viewpoint name='Profit by category per year &amp; region'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit by region by year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit by states'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit by subcategory per year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 clients (profit)'>
          <zoom type='fit-height' />
          <highlight field='[federated.137ifgn0pnnl441h036lt14rbott].[none:Customer Name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Worst 10 clients (profit)'>
          <zoom type='fit-height' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{02C8AAEB-C3AF-4220-9791-305D5DF51D23}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='DASHBOARD' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit by category per year &amp; region' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit by region by year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit by states' width='192'>
      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
      OAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit by subcategory per year' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sales by region by year' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sales by states' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eZAk2Xkf9nt513109X1M99yzsxcW97EkQRwEKBk2TIg0zUMUCVuySYeD
      IiIsOYKUgpZEIhiWSYkRZDAoKiwesknxkAKWCC8ogvACBBa72Nlj7qune/ru6rqr8nzPf1S/
      7KysrLuqu2Z2fhE9012V+fJl5ve97/4e2dzcZPCAEALGmPs7AEiSBMdxAACMMRBC3O+CQCl1
      j+X/89/7gSAIkCQJAGCapvuZfw6CIDRcy39NQRBgmiYkSWq4Tw5+X+3urZ/7YYyBUgpRFDuO
      z8f2HydJEmzbdv8fJRhj0HUdqqq6f/u/53Pz04umaTAMo+kdeI8nhCAajUIQBFiWhXK5DEpp
      0z07jgNRFPu+B++8BUGApmkghMCyLFBKwRiDpGkaHMcBpdQlKk5kjDHIsuwSNADIsuwyg3fC
      hBB30CDi8oOf531A/IePDwCiKEIUxcCHwQnee9Pesb2f8d8dxwFjDKqquvP03l8QYwW9xF6Y
      gB8XNHY78GP5ffNn08sY/UAQhIbr+5+hl0n5sfwYVVUhyzKq1WrTQsjHk2UZoVDIPb9cLjeM
      H3TdbtFu8dN1vel4SVVVKIoCx3FQq9VgWVbDAd6/CSEQRRG2bTcQQye0Ihw/x/vH5ATLr+uf
      G6UUkiQ1EbF/PO9D4SuUYRjuCtcNgubtHb+blxXEmK2eHycOVVVBKYVhGF3PdVB474XPw/+Z
      lxH4Z0CdXsLhMGRZRqFQaNAcGGMQBKGBMfj43sXTe51e593qPQTRBwAIuq5D13VXfHFR1OoC
      XvHL/+YSpJ36EUTc/H//uUGi0LbtplWHS512EidoNdc0DYyxromKX7NXgm+HVmPw9yDLMggh
      qNVqIyN+LxH7CdqvhvHfBUFwf/zfEUJgGAYIIZBlGfF4PFDl4+/LcRyUSiUAaBoTaE20fsiy
      3KBeeufKJX0rSLVazdWLBUGAKIoup9q23TAJrorwBzRMBInZXs4NuskgPRWoP1hFUQCgQdcd
      FbqxK7zgKuhxIOg5t9PfvZ/zhcgLSilM00QoFIIsy9A0rUn18I7fjrm7fWaO4yAcDsOyrIbx
      VFXtqDJKfACv3g0ccaQXoig2rdZ8ol4R18kOaLeSdiJ+vyj1Gr5B82h1fa8+alkWZFl2x/fO
      sdV53mO7YdZhLxj9wG9odkNg7Zwerc73agmKorgaBofjOLAsC6ZptrTXegGlFJZlQVEUlwZE
      UYQkSa6EaYVmFvYM6pUAnKD4wN4Jc6bo9Sb8TBT0u9cD1GqeXGp5z+12Ht5z+Xn9GLi94CSY
      odNiEPTTCl5VqBVjcPqpVquB1ysWi6hWq22v08tzMgzDtQm5XVir1VzVqBWkbtxqXE8PhUKw
      bRuKojSIGj8X+1fkTjfWamU9nGADg3mP4ed5GZF/xqVVJ/jn2EqdanVu0P34ETR37/n9IBqN
      glLaRGCt0Ksaxgnc++xbEbt/IavVatB1vYEO/Od730239lsnVCqVhvl38/6FbvysXhdXJBJp
      0FGDjKd2D6wVQwSd772RVqoSN8S9zMAYays1/OMEGcrdrD7+ebVbGf331KtL1A++4g2KThKv
      0xxbned3aLRzrIwC3S5kgqZpUFW1Y8CB61mSJCEejzcQWC9emFYPw+sN8qKVCAvyUPjn22oO
      /uu2+qzTy2mlNnhXPq/XZJiwLCvQr90LWnmA+HcAmu4r6Pygz4LepRf+ZzUKp0o3Y0qyLENV
      VeTz+cAVzbuqlkoliKIITdNcdUgQBDiO44o8L9q5VL3XaDVRWZabPFHeGwSOgkv+G+au2VbM
      5l+ReaAtSBVrdQ+dxvZLtVYvpVf15DjQToJxHb8V/PffrRRp95y5N8n//CRJgiiKfbuKBT4I
      J2puSQetsNyw4G5Ermp4I8fcA+O/uVZo93A4YbYbw7vaeI/jbs5uVgKeYtDNnHpFJ+Jvd95x
      wOszP04mDNIM/OBu1Hg8DlVVA93VfO79pkwIfJBIJIJIJNJgXPLvvD+GYaBWq7m5FYwxRKNR
      93gexOkW7dIQesl58ROZ4zhdqx2iKDa4y7r1hvSCdqubV4JRSgMZehRod4/tpFWnMf3jByFI
      xfKPI8tyw4LMA15ecFWwX3vIXfa4uzESicCyLNRqtZYnlctlMMagKIobseSeIVEUG6zxbhG0
      Ingfkl8E+88JsgGCvA5B53JVCwiWYsOAX8z7FxrvMa3OOU60Ikr/735C7sb49DNXkBosyzK+
      feUaTi3OYX5mErVaDYqiIBaLoVwuN2gGgywUDW9ZEASEQiFXGgTp1vyC5XIZ+XzedcNx5uGq
      lCiKbf3E/u+8K3inlbebVcsbsfa73IIemN+1287r1K/XpJv7anVP3RiXfgkyCPzE7n9fQYa/
      32XaDeO2YnJCCP46N4s/+E59IebqD7+/YaHJV8hvNBwOgzHW1s9MKUWlUoFhGAiHw266KSHE
      FVWtvAveMfzwq2BByVhBCBLpPI4QdJ9e8PlWKhUkEommY4NWrVard5D08K6MnVSsdgzWTlcf
      pvTi1/CP5ZWsQd4hbiB3Un+4itrKCSIIAkAIxNgMdnf3sLi44C5qPE1nGAh0lhNCIEkSYrGY
      m9XHjUSelMaPY4y5+dU8D+TBgweQJAnFcgXFmg0EvUsC93NCAO8zIO4/9UOI5/9uUNVNWGK4
      4QxqViAokY7nWpYFQSh4UpDRPP8eVRJKKRzHabCNWo7Qw9jdjMGoDebYILLW9bgAYFsWyADG
      ZUuYZUhqpCH9JBAMIPIEpFACD3bWMDc3i1KpNHS7qG20iKtE3ONjWRaKxWKgelCr1dyVPxKJ
      QJIkVHQLNW0agthdUGpYuLG1ju3oMw2fmZtvQJl7ursBHABWx6N6xwjqWFpJIf65UyuCVvcg
      TpwZ+Fq9GsVB86E7byM1d6G+pjSmnzVJAyFcH2O7zBrqC7qZY7d2U0fK5NKAUopareaKcr+e
      yfM+QqEQgHqW5eLcNK5/7RVo0+ehhWNdTWhYaHpZbHiuxVZi239MV/Pq8/p8rFaOAv6eGFrb
      LN2ole3O6ed4KsdgVXKQIqmuYwt7ej1OxYOwPHmTMeY6YbwJnb0wQddLsyAIiMViUFUV5XIZ
      pmk2GZc8sWx3bw8V3cabt9bxwuUzuLFZBI6TAUbsNOnG09HqvGFdP+izbhiz3ZjdrOb93Lf3
      HCGcAjWzQCQVOH7QdYuRc/i9awcQ7CrmlFVEBB2feN952LaNr125DyrIiCkM7764CAA9BcV6
      0k0IIS4D8GIDzgiMMTe9tVozsb13gFNzk7h26z4cdQJKLxfqYT7BD270bsNeV8/jCGwFz6n7
      Z9GKCYKcGN0yQpN7urIHKT3rftfNc2GMgYRSYEhhA/MgjGL/r96EDg21xLMABaAD3/jSK/js
      83EsLMw3uLXboS93QS5fwLVb95DNZqHruusBUhQFkUgEczOT+Ozf+ASee/YZ7G5vwbZHoVCf
      TFpxEDrN4zjn2awetU9WG+QafZ0rKqBm73EiLxgRcBB/HtX4xQYXsTj3bvzxTRXbO7t46/ZD
      VGpGoEfM60nriwGKlRrKoSW8vVbAxs4Bstks8vk88vk8Hj58iHg8DlmWsbe3j2gsBj27drzE
      2mU0cvDLDDdaPAy0e86dYhjHASZpoOaRa32Yz48RAfLECv7ja5v46/IZfOnKATa3dxEOhyEI
      Qt2jWapgdTMLRVHqtQP9XMh2GERRgpheRJ4xPLz7ELIAiCJBKiyhtlVE6uEWqtUKCKOolgsw
      9QrUUHQoN9oXTohGx0FKMbRW2bqNrwzrPgRBBOzW3iT/dbhd2W3wizEGfe5FMMZQiD2FP1vN
      4t07b+Lpswu4vnaAV0sLkKwCtnN3oUqkPwaIhWTsVSkIqYuS2OSi+10ZABRgj1Ls7d/E5XNn
      cO3+NoTaPjBEBujlpTDGACKCsfqc26HbQoqurjkC9D4/0qQFBaUh9GIA9+sEAAASSsHc2+zK
      JuQxiF7fhzdFQoxM4HVTw2tvViFGLgMa4ISSeIMCMPtUgU6fXgEtbrU9hggC0vOn8Y1XXsd8
      OgRLivdzqeCxu8g18f8uTZ6Hs3djaHM4CYxK5eqUCcojt7ZtN/1wJ0gvRGp3yPDlGEbaA2MM
      kMMQIhl3HfCqgn0xgCLL+K53nUE5t9v6wpTi7a/9GSaWL0M3HUQSE+7F/TEEfwOlhsm3uKm2
      DzAoYCPKECKTcIqbrc/rEcep3nAi9TcvGBTd2gTeXCT+N58Xr73oGoklWIXO72GU9gqzapgw
      7vanAhFC6jnapHX7jv2Hd7B06T0wajXkzQMUd1/G8rMfPkw1INi69W2oc89j5+YrkLUIyrUy
      zlz6ALbvvob4zFlYhQcg6gzKlQIuXHoKlFI36NHx5lrl0YQzsPduAvG5luf2K26B4erK3rFa
      JSWOEl51h1e01Q7WsPfgHhJzp5DbXkckosFiGubOPdvb2KEkzN11KMn5UUy9IzRjF5+5CFw4
      fak/CQDUH1BMC+Yfs1aBqVcQTc8iNb2IcqWKzOI5ALzEUcDU9BSooCIaDcGxTNiWCYfaKBXK
      ONi+i7fffB25vI5ENNyxM4QfLemEENDyHhgbXjZh43VHE2n2E/+wGcG7sgdV2PFyWCIqgL6F
      UpUhkpwFE0KQJQHOYQ5YTwiwxUbN4IwxpKwNfP5DcVw6u1Snq0EGnEqGcb9sQZQak5r0agmW
      ZeD+my9DAEMiEoKs1lMk6oYNw9rGDkzVhm1QpKZmQPf2EAqFML+0AKal8NQzz6OwX8S9u9cR
      n5xHPBrq5VZbfiNNXQDdvw0xc77npLbjwvAJoXtnQZCK5aqsggQSW4HGiijmq4gnojCpAtZF
      6WvTmCfglptim/jb3z2DSOQoKZLous767Yxm2zb+5C+vIJpZbPouu3EPD97+Ot7z7hdQVmYR
      jqf7nngvIITgzZsPsBd/vuUxVC/BObgLea71MYPAv6J6P+9UaDJsUKMMp7wzUDKcN//L3wzX
      ryp1jZ23kJh/quk6rcDH7tcojppb+PxHJpBINDpjBpIAoigiJFI4dqMUYIwhv7dRtwFCMwj7
      8j76RSv/tf971mHFE7QYyNRTsHevQ5q6NJS5+UEphVPZxeq1K1h89qPYv/FVhKZOo7h2DVQg
      IJCQufgRRGNRt137aDD4uEG1AUEFLMc7q+7AGEPG2cAPvr+Z+Le3dwZjAAAIo4yDzbcgpM8i
      FK1fgBCCM8+/OOjQgehKPejiGCIpda9QYR1iolmCDQpRFAFZhSqYqFUr0KIJVPbWICghaLE0
      nMIanMOuGqOOJI8qwDXI+ZRIYNQGEbojwX5WfsYYZtg6fvx7FhEOhUApxcZOFqtbOaRDFJFw
      eDAGIIQgNTGJSjQJSR5Fultvc+Ho9p0IkQzs/dtgehFEG26cghACEoojnFlBKpNBleYQmbkM
      q7gONTmPshbDxOTkiZohg9oa/aRTc1B2VOI0CuOXORaeD6/hU+87A0mScPXmXXxz1cCGlUTC
      qeFCaB/f94nvHVwCnD29jL1X30JNm4Gida64GgSd8lyOVKDuIWXOwtp4HURSQKQwxInTA87y
      CERQMH22bmfEZs7XP0wmAeDYbCKgg7o4xBTtXpiAMToyJwS1dBibbwDnM/jSt+7hdpbBjCyC
      iDKYQHFGWsfFMxfgOM7gDEAdB7vbG0ifXxnG3AfC0cvs5aUSyPMvgFo10L2bo5jWyaIDjQ2b
      EboFCaXgVHOQIhNDH9uuZKFkTuNNM1P/IO55DIzi23sRXKmKmH39W4MzgCRJeLD+EOkL4+NS
      7OddEkkFxO77GT0y6PJZHDcjiLEZmLmbkCITTbYE7/Va3LkDok3CzK8juXgZtHaAYrGGSIjA
      cFSYhTVEZ59COFx3kR8Z6ayldCGCBDF9BhTAhvrC4AxgGAYuPfteVPbXQRmDFp+EooUHHbYJ
      QQZXKyMsrhEcUAdE6L6gm+klEHn48z5xDFHNaGf09mzICyJ0hyDEmrt8c5erqERQ2nkbB5tZ
      VHQGmZZQqhjY17OYuvBdoNRGcW8D2uLpvh0JA/fPSKfTUGQBe6aG9VoEb928i7eu38ba2oNB
      h25AqzLAIEyl4mDVbE/jO6VNCOHj08tPEqOsV+4JcgjUOCqO4fMSRRGyLGPz2tchxRYwMZNG
      JJEGIQB1LESTGRT37oCaFuzDhs0N3St6uI2BJQAhBOFYGhv2CiADCJ1FDUDe1kHWbmBxaXnQ
      SwCov5yttbvuRnn+d8hbqRAQ6LUKmHihp/EFSQNGlCLxKKAT8bdbYftOkyYiqGOilZy++F0/
      VP9l4dAxMb+ETtlD1KzAqexDSTzV4cg6htKvZD+gdxaRNGQrMvr1sOuVEsqlPDZLBDWLQbcJ
      xKnngVDwHr8NiAJk62rdGOi2djWchlPYgBQaTtBunEAPVsHMw61IAx9bb04Dfrx71pFH0/Ot
      t6ESaTjbPa2yC+HshxpH7xDsbAersAnYOkILzw6vLUonMMYQUwEEFOJX9OZaYKNWQbWUBwBE
      4inXXsjtbdWDHdTGwwJFjkxAjJ0HSdTTNET0Zqipk2dg7l0Fiy1ACCU7Hk8LG25UmNlG3Sh+
      TCCkl4fSF6gb9NQnaPtNCG0advXCDMyxQPUCtJmLPcx2SBJAE4NVBycyh3t372AiEUUoGsfG
      1jbWzRSgzQOCDHZ3HWllHzVbhB5eAAQRRBBB0qHAifWyIhBJgzJ9Efr2TaALBgB1AELA9CLs
      nWsQ06cgxGa7vt47AcNM92bbbyI+c25oUXArvwGpj5Sb4bRss6qBYW0hOoUtTOFhJQ96UIaU
      eBeEiOeGJy+iwI8dykQawSwdULvrRyTEZ2E9fA1COA1p6f1wtq48JgwwPC8Q1/GHwQQsnAE1
      yhCk4Tge5PQSjN3bELQ4BLn7zOGhMECBhlvmdDAAQijZlRoybFgHDyBkukt2EyIZCJHM0QdS
      qCcb4gk6u0IbXJ2xWZRyq9BqBYQynYOonRiPEAGiGgVzTKAHBhjKwqtbJ9/5wA9GKSgISJ+d
      ksXUMpz82pBndQIYY/4V0iswa+WhjefoBYhaovOB3jkM48LFAAP4pHvlOMVNkHj/JXe8mzKt
      HgxrSicCAjJUHhj0vQ7UVIuQlj/AYcuVHjGwCuQ4DnYqAnC8vW87wjGrEOJLA40hRCZBS5tA
      DwEyc+P1wHK/RgwiMVlPQzCjCCHdvweIV4PxNAPHcRpKJr0E2G0coOH8vmfWPCalvTcMGJgB
      KtUqqiQyEiO2X9BaAZRILQMsXUPSQM0a2N5NiJlzHXoKsXoKiiBBnH2mzXHHC1reGcho9VaD
      cWbgm5B7d9fsdVOOYWsIdWbq/T4HplvDMABhjJLIGIWRewhx4uzAQxFBgDz7DMTEImiufWqH
      tfE67N3rA19zJBhA4AiCgMrBJoggwCxsoJzdgVXeBYOA0tZNmLrhEvNJq72CFgc1WtsUjuPA
      sizsr76JYj6PnbuvD84ApmUDAR6gk2oJaJd2QGKt2570BUkFqA1mlOEUHoIWN2Fvvw1n9zqs
      jddhbb0JSNqhytTYMOykiWJQEMJQy28DTIAkiSjuPACrbqFSzmPr1lUQT0XbSbeBlJOLsKsF
      1DbfBrObu1Rwdc2xbeR37kNSBqwIAwDDsEDE8cmidKp5CFOXhzomEUQQJQJ79zrEzDkwPQ9p
      +jJASJOaJcRmjs7zZTk+iqDURn79BsToPESrAKtaROWggDx1oITD2F+/haWLR80FBmmbOAzI
      yQXIiXnoOzcgqmEo6SM7UBAECISAOgbMqo7c6tVh2AA1EGmqr3O9G6UNC4IShrX1JsTpyx3T
      oSsHm5Cik6jt3QFRM3CqO9DSyyhv30Z6+TlI0pGAFOJz9cAYIe0jy+TomifdibkOgnoD/X4h
      4cx3/XB9JDKNxMLlen+dE7+vRjRIIUKgzVyCVdyBU81BDKe8B2L2wgfdPwdmgJLZX7CIUQs7
      d68iMTGB7btvYfLSRyHbWRRKOsyDh4jNnkG1UsH86d5yO+T0KYi1HIz8GsR06wALc0zs3XoZ
      8Qt/E4RRFLZugVZzKJeriEbCqBRzSKR91UqPuDrTD4KMW7/Of/JMHgw5NgVj/x4gSBC1YDfl
      wDZAqfvdaBpABBlySEMoNY9YZhHhsIzC3iZsS4csE1AoUKT+pscso2Pk2Sxvw6hVYdYqoGYN
      jlEBYxROdR/bd69CVh6PZLhRsqzXFTouaGgeTAjUyTNw9DKMnVuBxw8sAcpGf9zPHB35B9eh
      hFNQImmIBKBmGbpRhiKLkPQssuu3EZtcghbqbYtPRy+BTEy3PUZNLOHCR3/i8K9JDLEW/h2L
      cWEEv0SSE3Nw9CKs/AZkXz/SgRiAsfoWlv2MQkQN5z7y2YbP5p7+3oa/J091V9TgB3UsiIee
      qXEVz48bxoX4W0HU4jADWvoPxACmaWKvJo1dFBhAQ5RyVEwQOPZY0sF4LgKMMRDqgDnD30Mu
      6J3TgOsMxADXbtyEIaTHKgpcx9EOISO9StD440lrI0W/dgDN3gURNRT2H45gVs3dQQSjBn+e
      aN8MwBjDtzdFCJHJfofoGXxF79wm7wSX4T4u3anD2rgZmkHoZ44kkgGqOYgTo+kp5V+gaDkG
      M78JJXkUKO178XYcB5vl4137vV2XHydQSmHbNmr5LRxsrcFxbGxffxnF7DYeXPkrFHfuY/3q
      K7Dt+jZFPUu2Y5JKvc6LqDHQ2kF/jZy6GZ80bifFqAVBaZQBfUuA/ewBDDk1nirvIwhBEKAl
      ZlAp3QCr7SB/kIeD+8jML6FUY7AreVAApA9ioQf3QPR84HedOml7S9sPTziSct7fvecwCiFz
      DpC09t0kBLGeRzZC6dbAlHoJki8zti8GYIzhO/cOQEIn3w5x/ND7y+Q9bWrZNeQ27iM9+72I
      xeOQFQ17q7cQnV6EoMgQQCCIYo+tRwjk9AqkxJDzo9qCwdq9BcooxKlLoDtv11UkQQJRoxBS
      pwDUs3bFUG8FLINAiM/CzK03pEf0vUdYOiIDOeuxaCc4Lvk6oYklnP9g/eXMP/Nd9Q8PF6zM
      Un8u4VGpF+1BIE9dAKMO7L0bkKcu1omfENBaHvbmG2CiDMYYlJk+76vbmXjLMNU4jNI6xEPG
      I4T0bwO8cHERSWs01vvg6O2lBxlw4250do+Tuw8iiC7xu59pCcizz0BOrwC2Dms3OEI7mgkR
      sMnLKJarqO3eBTBgKkTReFyIpNkTMw4S4XGEW8YoqVAyZ0ALD8H6qOTq65qEACAQk4swKzlI
      G3892C6RdGyJZDDGfEL8w4O/btf7uaAlIE+sgFm1rscbVoYtWfgAykK8fy+QKIpYijkYz74J
      TwjYxQkL6U7xATG5CCt7H8Lk+a7GK2++BRY7Bzt/G4atQHSKEMKTMLJ3kT7zEYQirfPG/Iyj
      R1f6ZwBCCD717CT+z3//VcA4rL5x7/OwOtPzN4DWnx0N6n5W06JgYuvpEY8Dz/94ncI2qG0e
      HkWOOue6DSyJ78yjYzyK0NHsmjbeOKz/bboDBlregzg9WsPuUULHXkGCBGYUQc0KBKX9DkPM
      0VHNPgCVVsCKeVAlBaO4B1Lehpb5AMrZ+whFWveB8qu2RI0NxgALM2n8N1/9bZy+OZydVfjD
      MgjBL/0Pvw668EJf4ygL/c+BmtV6m70uVyQ/zJ1r/V98FDj01Z+UXdNNhFiZex7W/l0IU+07
      elNLh2FYkIwiIqkJFAu1em9ZNQ595ztInX5v4PU5glSxgTfJc2ZmgCExgDvZE/bAPHYKFBvM
      ruHRd7em9rATBHA0Lm+d0ldKhCACTufCElFLYum9//XhX/NIdGj71LGhLh1wjzBRFCF+7nNg
      f/VXJ61qjhz8hQftpD7WGMKL4SkoZnkXD177Cubf9zmYezdQ1Wsw8jlkZuewvVfA6edfhCTW
      maRhw4ourzHsnKe2YzEGVt4evCAmcfYsCqqKpNFnaVgrjCFHEUIaSgQfx7ykIAiCAEEQICZm
      kTnzAqIRCffeuA8m2nBMGbnsHlSrAMOkUCJyE+H5d5UPghROwcnehZQZvJ1NEFxpkF+FYhcQ
      koBkemIIRfHFImbN5hYUg2Ic1BBvzStfnQRBeGwIv1u7wK0BhoPkzFmIoopzL34OZq2E6sE6
      tOQC8lsPEI8qfa/gYnIR9sPvdDyum51sgvaSAwBGbUzLJSSXzrmfD75N6ttvQ37s/ObNPms/
      EzzqsYKgZlYd74lIUEJHJKOEYlDm6x6vmbPB3fCOO6Ie1ML9SAKJKOsOkp55DWWHmMcN/lfm
      NfS8ngRRFJttAiLC2X4rYHcg36jMAWEUpN9cKtL4a3AndwKYFYA6oEau9QAcSgRiarlxmgO8
      3252i/EeM6xdeVrOmRBUhDgcU4ek1tOiB98fYHV14CHGDiT45VFKO7v0Orjy3LGqB1CcEtTU
      AD7bIYIQgvLmjaGMM8DJoy3+YQwaLUFUZg7/ZIMxQKVchvyVrwxlbs0YQysYR828gMfHCG5l
      tHZ7bjdGblfooza4p/iGrSMTUxvmOVBJ5IOXXsK57e1+hxhjtH+RQyP8EWiPvTSraibY/ibU
      D+EHzVOeuojaW/8O8tQlwJO85v7Or8PqPnzGKMAcgFJ37vXDhHo7S0Gq93pSU5CojgmhgMj8
      uYZrDhYI+/KXBzn9CcYERzYO/6cZ5qGnT5IkOI4DWZZddcU0TSiK4rZMB+pdw2VZhuM4kKQ6
      mfHfW6o5ogIlcwaR+cZUkkHtTDN7D/bBA6Tf9aGmsQZKhybn+0sXGHf0knHYv9hvKjY8VvQ6
      b+/zsCyrHhgzTRiGAcuyYJomTNMEpRSO47jHU0qh6zp0XYdt2zAMw2WmwHmFM/V2hkOEnFrC
      9NRk4DsdiAFmf/Insfr+9w8yREeMe2FK3/Mbk9vqZXXlATFBEGDbtrvaC4LQECnnerllWe53
      /FhZlhs22/BDTC7CgQBqHu2+PigNUL0ANRQN/G6gZLh4IgH2y7+Mzb/7dzF3a4zLF2sAACAA
      SURBVDSVPSeSxMVVzS48En3bAyO+pXb+/VbPlFYPYG++0TA9dxTGYDMGh9QlF0O9HoSQ+h5k
      Fg69ZKLoFu9TxgBB8NTOM1ggAKWw2uwow2wDrLSD8PL7+rn1JghqHGZ1p6knEDCEZLhEOg3j
      i19E/kd+BMlqtfNJ3Q8O4OQ9LSNjvhOSAG27NITTECef7nh+z+1PfOf4s4T8BjEhBIw6KG+8
      DUkg0GYvD7QQElFGzbARVH4/cGMfQggmV1aQfV9nbh13dYZjuPsqngy4HeMnmkFsm05EGJRu
      3A288zzq7CwA0RmA2m3n1C10OQWj7A8GDmmbVEIIsDTYjoyDotUL9343yuv1fI0RCZZO8/Cm
      QLQiKP8x3RK2l4i9P/3GCUh5C9r8c03j9wMxsYjtvNHEBEPZKR4AhOvdbRA3Kp2+tHMHjpSE
      XXoIITwDRdCxc/8WYpMLMEwbCtEhxxcxMdO5P0672ZV3bgGhWdT2byE6+wzs8hayWw8Ricdh
      WgSqaECKLSA52b49+7gKmUGltJ/Yg3JyujkfABCbh5ldhTKxHHisn7k6jS+klrGXv48poQgl
      HK9/1nFGXYIunGxIP5qehm2VkVu/D2rpCKUWEc3MIjk1C1mRYVWryG91515rRwLRZAamYSCc
      SMKxGUKJKYTCYYRTs5BVERBisCrZ4dxUALiLkefoBxFYO7vJL7kaVvghLkzDkLokkoFlVIHD
      rhFB0qtT4K8pyp1cwXauCrNSADAkCUAIgfCxj4H+6Z+25ShvMllbMd3jnrMAUNpZRW6/iMTM
      HGxDh8B0hOIzyN5/E0zLIJxIQhUH70KW37qHXMFBiORA4gIslkOtZsC4d6W+EUNtC2J8scvR
      +iAQZmPj2quAEoVV2kVi+b1g+VtA8hxyd76FcHIG5cI2Jpbfj3QmOZC/H2gmoOP2ypGpp1B8
      8Apic09B0GI9p20Efh9fRCV/FUokMTwVSE2nYQsClCF4bSRKsXL7FdxbenfX5yQWn0XCR3eJ
      TBSJTO8b+LV7pMnl96Bx86UVpFocOwoQQYaqaTCJinByFuFIGIo6j4NyEdGZ52Dl3wZzLDiO
      3ZH4m9WHYPup4fqe1fc4GIEIIoT4HMCcoV2PEAGWZeNg487wVKCFS5ew9pnP9DCJNu44SvGj
      X/7XuPTn/8dINk94lCEwC7puQCY2yvk9OLaN3M4WyvkSaOUu4rOXoYUTCEfbd1jwopcMzHbO
      hk7o374IzPXuH4SgFjuLavwCiK7rTFUHz8NmjKFWqWDrp38aS6+/3uba3YswCuA/vucTeOUH
      /tHQcsU7gZpVWIVtSJkznQ8e5Dq1HBQrDzV9st4zDkIIig+vgk0/F/h9u/fkOA5yD66AinFE
      Yxr2t7aQnp6FzUSENAn5XAlTi6f7TppzDlYRiSUhaPGhSh1CBugNGjRYKBLB5D//51j90Ie6
      0m47Wu0A/sarL+Fjv/+/gOmloczzCfpDJ7dpNLMAQZRg1kqw9h4AsRlYtQLyu5ugZrFvwnVV
      M9JMqtwh4M096sUNPnA9gB+EEMQnJkC++EU8/Oxnsbi/P/iYAL777a8jXPkZ/D8/9itgsf42
      5X6C4cNbGbd/93VomXOIpKZQSGaBwhry22uIx8Oo1VjDhug9M0NwuRsAYOf2t2ELGmg1C23i
      LGRUkd3bhyZaECLTqOzexdT5DyGWbHYI0Fp+uAzAEUskcO1nfxaZX/gFhBwHVUlC2LYP76W/
      ip/33r+G6G/9j/ijn/o1OMkODWGeoGcwxuqtQnq0B/ixiy982v381PMZAMD56WF1eKhnEzWl
      MgsCQokJEDkBUxYRTqQAW0QSChzLAHN0yKoCq1YBSQW7Kka3x1EkgoNIBA4huPYLv4CvPfMM
      vvzcc/jaqVP4T08/jYok9cwIl7Yf4Md/47+HuvH2iCZ9iOMKUo1pOfUo0h16QfD4AakZAMq7
      69Ar+yjtPoRlGqge7KBWLkBkFSjRSShKGEo4EjimEEoOzwj2gzGGnZs3UfrFX8T1Z5/Fh/7k
      T5DQ9aPJD+BK247E8Hs//ssonR5OtqAX71QjGABKD6+C+ozgVsTeKb3B+1579d37aYNm7yKS
      nhuJI2RkEoAQgpmLFzH3W78FoVrFzmc/29hGtkdx68VMpYTP/87P4ez/92/6qiPtiCEtcB3v
      bQwlQLfvwy8Jul3I+vbijEjqjHybR0EUsfztb8NKpfAwmWx5HA/ftwrz8+84koaOH/kP/xLv
      +3f/CMwecle6IXDAo9Y7qKE9SQ8JcADaemDafd79nBhIgBdoGBiJEeyFqqoQP/YxnPuN38CN
      dLrpe+7G2nQsEApcM0ysqApu6QY+GY3gO7UaFhUFNwwDpxQZmw7FhzStXmUE4PtffQlRvYK/
      +KH/DUSLj/p2hohxzIYbfBUfNtN706NHkYYxcglACAGZnobAGJ7KBieJUTBsGQYe2jYMAswp
      CpZUBQa1sWY5OHAcFBnDumUjZzlg3tUKwHe//Q185l/9DITS7qhvp2t0V8gznhKiXaT3eCPA
      DaOMRKIey07Xk5/8JLZOnWr5PSUEJQCWKCEuCsg7DiZlFSFZwYwiocKAmChCEUSERQE0IFnu
      PavX8bnf/hmIxZNr0+L1dT9q6CaQdFzE33yd0S0UI/MCecEYQ/bBA+z/7u8idPUq5q4FbyIx
      jCSrWzNL+L8+/+twErN9nU+NEuz1VyBFuLrmfYG8upV5Pj/6vbHPg+fYpsNJfbOHaglCzFs3
      0I5YWnzXlr5af0lLW5ATM567IaC2ASZ6thjyzrkjEXq/D7jvhkO7G4scjuMUtxC79H0dzukP
      x8IAHIwx3Hr5Zaz89E8HPpeg1aIfZrg3OY/f/6lfhd2ikKIdqFGCpGdH7p50jDIKuX2IE6Np
      B94JdOsKQgvPjmx8v77ej8fI7S6xdwtqnzv2dMKxqEAclFJUvvWtlutS0IPpR4Se3tvAj/3W
      T0PZ7rPX5XGo5uOp/o8E/RB/w7EjfFYj9wJ54dg2kn/6pz2f14/1v3ywix//7f8Zv/8Tv4Ja
      zyvdMVDnCZsKmrGNRLa9+7jVU2CUIh86DTE62frcgBjPIDGA6vqVkcQCjpUBREmCtbgItLAB
      gP5zhYKwWDjA3/5XP4vf/YlfQeVU9xvuHZv//gSlwEImhmcuLfd1rmnoeOlWEWjDAEDjuxzk
      mRIlDKKlIUYyfY/RCseqAgmCgNQv/zI2n27feyYI/TLFbLmIv/M7fx+x+99ueQyzarC2r4GW
      dgDHhCAfg03UykA8Jgxy6V6ixcOAFJsGqzW3NBkGjpUBCCGYPHUK6j/9p9jNtObmYbcxmaxW
      8FO/8wUk7n4r8Hu6fwuxufNQiA2UtqDEZ4Z27fFF+9rfsYIg9rSbfLegZuV4GQCoP+jp5WXo
      f+/vwe6j+L1fpPQqfupffwGp6/+56Tsm1HdpkROziMw9NbK8k3HCI3WLDP3vpOODl9EFJXL8
      DMAnsfwDP4A7L77YtRo8DImQMHT85O/9AjJXvtQ4NnVGlmvyqGBYEpexelNcs1ZEMZdFYesW
      ivkCbNvC9u0rqJV2sffwAQqbN5Hb22nZJLcBhAB0eEmPDUwwtFF7hCAIOPPFL+Le939/y2NG
      YYzGTQN/5w//GWa+/UfuZ0QJwzGHL2IfW7RraHCYRGeZJsr5bew/uIH1a99EYe0NFAplZNfv
      YH/9JhijKOysuZ2iO15SGNxfE1gTMPCofYIQgnA4jFM///O43kU3iWHqqFHLwk/88f+Oxb/+
      AwD17sG0Vhja+I8CRqUBEULqm2AYRWTXbiE1u4JoMoNQLA3Z2UUxXwGYDdvUYekVSJLU3aba
      bPANyv3pHoQMYZvUQRGKRCA/+yzsL30JUsBK4O9gNiypEHIc/Nif/Rr+gDpY/fCPwt6/CTnx
      TjB+B0c75uHvJzp1Gk9PnQYAt2/S6cnTDcdmVgLGbuU2ZcPpEt5UVjmUUQfEhc99Dm/9k3+C
      Trc4bJVIpRQ/+u//JU7/598c6rjdobeI6PDTjAc8f4RBjFYJeUGfdapF6ISxYABBEJBMJDq2
      VRwFZMbw2b/4PUhabCTjt0d3VGhZFhzHgeM4sG3b1Ztt23Y/dxynO4My4Mq9q5ejJP8WCLgg
      pRS51VdRqVrYuvUqKKUo7z/A1t1r2Lr+dWzdeQsbV7+KfHY/8LlQvTgeDAAA0bk5VKST0cgi
      loXl7/ynnpjM9nS58K5Cva1I3V2PbzLnv45XXRiFlDgJtLyHFomSsUQUpi1C0qKglOJg/SZs
      U8fE0jmIahSVXBa1Ut41tPkzo1YV+s0vn7wNwMEIgSmKiNh254OHDJExfPorv4vfev6TIF1s
      XG0bJdx/4xsIpzIolwycfua92L75bTgAzHIJibkV5LYfYOW5j0JV2z3i7lZevi+XWdrGzsYW
      pman8fDqK4hMLcOsljB56iyy2ztYuPB8dzeMOj3161gghIDpxb7O7RdBbmpJErG3tYaqKsLe
      uwElMoHE9BJy+znUihVMzs9C301AlmTX0HYL7cv7kKafGh8GmFtZwd1f/EUcvPoqKGOQbt6E
      s7aGiG1jtlIZ+fUztSpOfeMPsfap/6lj0EVUwgipCgARhBlwHCCSmgC1HewXsiCyhkRmHpLc
      hXejCzhO3QNy79WX4IgxzJ9/DvGZMyBMR6lWwYPX/wJUisM5+0xXRTn97P7ihShJ+O4LcXzz
      4V0YJARmlCBPncdIczsC4zQEk5cP6wTO8nTpKSQ8W0AsvfvjzWcRAtg1yJlz48MAhBCc/fSn
      gU/XGyzxl1EuFnHn138dK3/0RxCHtF9Yq5f9w3/xf+N3tRi2PvbftT3f0UuwiYRYOAbbMCDL
      DMWdDYQzc9CiCcAooFouw3EciEPwXwN1fffsiz+M0sE2qF2DlpoH1bOQwxZOvfBx6IUdd4fG
      brpCEzS3NuklezMWT+DFlSpsqwJRUvDVW9dAJi+BCOJIVDEiDGcxYYzC3LkF4hggknK8BTGd
      wBiDbduQZRl6rQZV09ygys2f+zksv/wyVOdos4RhPmhKCF561/fgO//l3wc5hvaLjl5CIX8A
      cWKw/kPezal7waXayzh//pz796DFSPs7WyhVDezUJNSoDIcCzNZhTz4LIio9z88Pa+8OyMS5
      zgd2ADWrMO98BdpTnxmPOIAXhmFg9fZtbP3BH0D6wAdQvHcPZz/+cVx45hlc/hf/AqvXrsG8
      dQsskUD6H/9jpAvNwat+meL2zCm8+gP/K8TQo9RZAn0RPzD85LfM9CwyAFZQr/ugh7u6vPzG
      N1FLPwultg0rfhoQBFC9BCIIEJQI4JOQ9f2B6+WUjFGIh945Rp2hKFjWxutQTn3Qvf+xYgBN
      03Dh6acx9w/+AWLxeFOvmpXLl4HLlwEAN772NVReegkz1SrkHtx/rXBn7vQjR/yjRr9SVpQk
      iIek9cK5WVT0DaRnI7h175solwogoTQyURGl3SJ2lDOgagqp6k2kwhISIQLHoQABREnBGwcx
      IHEKjA7uHGG2CVAbJJxxvWhjxQDAYYfpROetjJKf/zyiP/dzWP/N38Tcv/23UAf0HqnO8Xuf
      ThIdm9YNSb1MJJPu/rzPPn0JhqGDUQdaqL6Bh16r4uDgAebOnUGQEZ1MlHB7/VU8qNRAAFBq
      950XZO1cA0IpWJaFyuZbkCefHp84QC94uL6ORDqNaCyGc1/4AvZ+6ZdQ7WDHtDMObUKwthK8
      MUQ/4z2K8BL8KOMJqqq5xA8AWiiMufkFtPIghaMxPHfpDD71/rO4UHsZK/m/7PvaVC9AjM9D
      kiTEElHUarnxZ4BqwO7z6XQaX/21X4Nt1/fBWv7kJ1H41V9FoU3rReDIn+7H/3v5fdj58A/3
      NK9HPfDUdouqMWRsRdVw9tx5pBLRvscQo1Mg1T2IooDc5ir0fGH8GWB3YwOVcrnhs3Akgk//
      w3/oRkgJIVj68IdR+vmfh9Ums5B7TPwveKKSf8fVA/hJvN/ODceP/plTjGRAbQMAwdTTn8Li
      2QvjZwP4sXyu2fW1trqKhaWlptV84Xu+Bw9WVnDqzp2W43m30+GYKuSQ+OYfIv+BHxzL1W8U
      OOn77LtYnhzq8iD1H1L/v/4fOWymVfcgHbqSDhtxMdj5h1Dmn2+45tgzQBBkANdeeglPf19j
      tzBJkkBnZ4E2DAA0ejcIITid28OHv/7H+NK7/wsQJTyqaY81uFdk1Kv/MBhPmnqqr/OYIDfV
      AT+SDDC7vIzppebObYQQkE98AtY3vtG0X7EpCCgoCsqKAkPT4ExOQsxkYEejuMJi2LzwMQjH
      Svwnq2actKDru2X6ANcUtARoeafhs0eSAYDWAaD5T34Sb1y5glAyCSGdhhWPQ5iehhKJIBSJ
      YOqwGwU3Ymu1Gta/ugEy/UwXPSsfJwynDWWvOEn7gqhR2Hf/EvLsM+5njywDtEIoFMIzX/gC
      arWamx/PH7ogCIhEIiiXy7CsepE1IQQ/8eIs3rp/DTf2BZS1BQhqdMwNwcFx0hLgJECkEITk
      qXodwOFeEo8dAxBCEAqFXAbwglIKXdehqiosywKl9LA2OYQPPrOCj4giNja38fbGOm7nZdDE
      MiBII2SGk6PCkzaCTwK0mgWtHjSouo8dAwD1lV5RFLdoxYtqtQpZll0VylvYYts2pqcymJme
      xMcYcPv+PVzfdfCgGoWYXDhxDYnqRbDycPY/IOlHVcL1766mjlVPd/FEkh9LBiCEIBaLgRCC
      iq+WgFIKy7KOKoMO1SS/H5xSipXFGZxbkWAYJq7fv4Fre0CWTEGMTAxHKvgW4U7RZaW6hk89
      nxnS6t053WQcMTW3gMT1Kygkuy/+AQBmVkDzD6CufKTh87FKhx42arUa8vl80+ec0HhkWBAE
      qKoK3bONK9+7jDMHb/dxkMvh6loeN7IijMgSiBzqixkcvYhCIQ8xfdqd01L5FbywqDTvNQG4
      m1SYpgUnlIEaeme6awGgmD/AX+5MQQg37zkXDAZr803I0xdAJK3hm8dSAnC0arjkra0lhCCR
      SLhqU7lchqIoIISgWq0eldBRCsMwEA6F8IGnoviIJGF9YxPXtkzcKSogyWWwXsRzAM9MJGM4
      tzLtVoB5d2vk81AUBa++eQMkHDlRQ51Lzq56+gwZoihBMA6ALhmAmlWwyi6I1Jzv9VgzgKZp
      qNVqrsfHCy9xcXtAkiQkPflEnOiBxkAR78IwlUljflbGxxnDrfu3cW2XYkOPAELnPpaOUQGq
      RUCur0gMAIvrgcd6mcA0TTx9fhlXbz8AQimonsSy40DxYAcHxRqgF7Cdr0GhVSTnziEVEbFf
      qIJVD6CTMFDLIjK5gjMrw99pJxKLY0lZxVqXxzv5dUiTwcU0jzUDiKKIRCKBg4ODJmngFkS0
      6UQRDoehKApM0wxMygPgMteZpRlcPCPDsqxAhmtGEpTGoes6wuG6OqOqpwKllqZpoJTCNE2X
      Ed91+Rzu3F9DxZQgK8enwsbT0yiU72FmYQFCvAa7bIIaFSSWziNfvouqZcGgVRDdgqQPt92k
      VxKuzKWx+mANQrI9gzHGwIwihPRy4PePNQMAdQJXVRW1WvDL4H12ggJrhBDIsgxJkqDreluV
      g6/O/JrdgL9QfjxXfbxjMsag6zpisRgMw3A/M00TZ5YXsbq2joIegaIdj01wsPUAG5s7iERi
      WJidx92rryE5ew75nXXs7OxjPpOExFRABcLx4RraXikci8UwgQ3k0J4BCCEAA2iZb6Hrawv/
      OBvBwBFhFovFJreoKNYLuCORCKLR1mm2lFLkcjnYtj3UNOhud8PhGazcO+WFLMu4u7qGvKUi
      mkh1uT/x+EMQhI738rW3t3EQvQxBEKAXtmBYAuITk9i7ewXp5WegFw9gVfZQzhcwe/opMHCb
      ZQy6Qx8XCCFQFAWxWHPnN07IQfGCIJxUDYD3un6GsSwLZ5aXcH4mguLOKpzHpLKtU7G/odeQ
      Z3HXJttbvYqH1/4a1KxCDkdw8HAV5VIOkelz0KIJCKEEoMQgaAmIoaOfx54BgKOOxYQQZLNZ
      VKtVt70glxCGYbRccbgqNIp5dbNi85W/VetDy7IQiYTxwXc9hVr24WMT5W33bK7f3wJJLkOS
      JEiShIn5M4gkMhBoBRs33kIopODg/hWYhW2oqUWIoghVVZuezWOvAnFwNWZ1dRWyLKNarSIS
      iUAURZim6bZrn52dDVSHbNtGPp931aBhgRAC27aHtsv83v4BsrYG6Tj2OTshMMbwyo0t7EZb
      B8OCUruDPntHSACgrlPGYjFEo1GEQiEkEgmEw2HIsoxIJILp6WlMT0+3tAVEUYSmaUNXgVqp
      Nv1iYX4WdmnvsZECQSCEgPSwY0yr4hvFzD7+XiCgfuOFQgGhUAipVAqGYYAQAsMwXIJPpVJQ
      VRXVatV1S3oxCjXIm6XarUHcCZZlIRZSYJ104tIIwSgFZY0tc9zvPPfNV/xWxT4qzHcGA9Rq
      NZTLZTDGkMvl3BaClmWhVquBEIJisQhBEBAOh7G3t4dIJIKMbydLWZYhy3KXfv7uwbNSgcEl
      AWMMIU1B1dQhK1rH4+sqmIVqqYBEetIdo1v7ZNjoplSysLOGAyfecLz/fKDeB4ihvsFeEAOU
      lNl3hgokyzJqtRqy2Swsy3INJ1VV3b76slzvIGxZFkqlUpNPHqiv1NFodKjqBWdEYDheJsYY
      FufnYBT2urp29uEdKPo+nl5KgRQ3QEobcAobKGzcBg14BscFQghWb76F3M5DlLNb7jN3bAs3
      b9/BfELEB6P38N2Ju3h36B6U0n0wD8PKxXv47MIGnhfeglZdb1hkGq7zTjGCOXjac7lcbkh+
      4xBFEfF4HKqqNqgo3vMLhUJTYG13dxeJRAK6rkOWZfeBC4LgMlk0Gm1y7QmCANM03c+H0W9I
      EASUyhVcW91BamqhZfVLKbuF9z617LoSvQmCoijiz//ir7Bw8T0DzaVXeO999+E9vPjCRXzt
      m6/BdATMTE1gfjKJ+bkZhMPhhmMty8IbN1fx1paNzSJwOm5gKkKxmbdxcS6C/3Bbgh5Zfud6
      gfxgjKFaraJarTbFAXg6NT8uHA43EK5hGMjlcg2rdalUQqlUcqPO8Xgctm2jUqkgk8ng4OAA
      6XQaoVCo4Vp+NYMT4KDqB0/u+8Z3riI+fQqECE36sZVbx9MXzgTGQfj5r115G1JqAaI0fDdw
      N4jSAkr5Azz//HNuinsneO/zIJdHOpWEYRj4N19+A3eU58EDYYIgvHMZgMO2bTfK6wXPEuUq
      k9cwtizLZR7vOFyF4qkNPJjDV3lZlpsMNtu267sqetKuvXMYVCWSZRkP1h9ir2hAjqShhsJg
      jKFSKmApKSKVDE5X4HNRFAU3bt9FTUxCVjvbFMPE3sN7CKOGj370ezAojTqOg9//s5dwzVwG
      0mehWQeYlfOPLgNwHX0Y6biWZbnGMQcvrQyHw3AcB5p29PL56j+o7u73ULRigL576HigKAq2
      d3Zx6+EB4ukpxIUKzq6cClQD/fOQZRlvXL8DOTk/mt7/AYxumQYuzdbjMsNEpVrFn39nE+9a
      TuD0wuSjywDDhmEYyOfzDaqHoigIhUIIhUINRJjNZl09n2dodiKMoHQG7mlpxQD+Y1tdp1sX
      qiRJcBwH2WwW09PTbdPE/djPHmCrIo6kEMfP4IZeQ0w08P53PT30azVd+wkD1MFbpJRKpQYm
      EEUR4XAYkUikoR6AE0oul4NlWT0xAAf3/3O1KUgC7O7uusymqioMw4Cqqq6aZZomarUaIpGI
      O0Y9NaK5TsDLcK3QigFUVcXXX7uKxMzy0KRAbm8LkqKCgCCaSGFr9TYUwcbzly/g1NLisQTz
      3hFxgG7AVR4AKBaL7kt2HMftJMEJzJvunEwmcXBw0HVCnRdeFchr+PpXff69YRhQFMWVVrIs
      Q9d1JBIJVCoVWJbldrzwMwAhxL2PfmBZFs4sTGI1e4BIPNX5hC4gEALVzGF2egpvvf1NfOD9
      78XS0tKxRrGfSAAfbNtGNptt8sKIoohkMglFad7uxzRNlEoltx4gCK0kAD9fluUmt2uQOsTn
      5V3JuSRpF1DrZSul9lLgGuLTg1d57W+sQlEkMKOMS+dWcPr06RNJ33hHBMKCwMsaezm+VQRY
      lmXE4/GeDHJe6ML3RPPC29DLyzRepuTJc/7SznZ2xKAwTROLUwmUCwcDjVPKH4AxG0mF4vKF
      Mzhz5syJ5S69Y1UgxljTisgYc7vG+VOPCSEol8tNARj+nSRJiMViKBQKgTqy39AjhLjBtlaG
      LT+uH/vCC8dx3OKfbsdsdZ35uRkQso2tSgmhSHONRSvwa+5vraGytw5CgPd89L8a2L05KN6x
      DMB97369W9O0hsovL9FwNSUwpH5I0JlMBqZpwrZt6Lre5Fr1Ep43ZhCEblfFTsTMYxRA3b7R
      NA2O47j3k8/nkUwm3TiGZVkQRRGhUMgN5qmqinA4DNu2sTA/h/2rt0BIvGtGotTBxv1biIRD
      SMSj+OQnPn7ixA+8gxmAg+vuPPwfiUTcaK6/BJE31eJtU/zwphFw746XAYLy01thmCqB177g
      HizDMFAqlSBJEmRZxs7ODqLRek9UURRdBubzLhQKkCTJTe04NTeJq/fXkJxe7GoOgiAiPTkD
      xTzA0srFsSB+4IkR7KZElA93ofGqRbwKywtCCKLRqOsWbTduNpt1GYAzUyv1yK9uDZMBKKVN
      TOmVAJIkuX1TuYpXq9XcZEFRFN3Uccdx3HiCKIp47c3riM+d60oS6NUysvffxA/94N8am3qF
      d7wEIIQgEolAEATX/en1pPiJkzGGUqkEWZbbrmJcJapWqw0EHWRbBPnmufrV7z7AQWMBcLtc
      FAoFaJrmqkaiKDYY45zBuddLluUGpuEMlUpEYXcgfkOvIre3je21u/jYix8YG+IHnjCAC0VR
      Ghrqen30/G8v/E12g8B1Zt6LlB/rZYIgYvAz3KAEw4nV6y0C6tHvarUKy08JUgAACZBJREFU
      x3Hc/kcAXMY2TdOVAplMxrWbvEgnYrh/kEck1nqDQkOvQRYJmKXj7NkzA93LsPGOdYP6IYoi
      UqkU0ul0k8ckqF5X1/WGgFmrMZPJJDKZjJtO4R+LUgrbtt2UiiAMI/LqN775NRVFQfxwU3Je
      7COKIggh7nPgKo9/Ho7jIBqNwuzQACuenEAkNYVIOHQirRTb4YkE8IEzgq7rKJfLEEURkiQF
      dobj3SS4UdzKO8RViVbNubgk4cEqr93hV5e8n/MAWCtwlcWvZomi2FTtFgqFQCl1c5/8EASh
      gTm4aqhpGtKhw/HbSMNqMY+nnro4kmS6QfBEAgSAEFJ/sem0m8MfpOo4jgPTNFv6/r2QZRnh
      cBjhcNglIuAoisvPb5dSwY/jKpSu623LM7l04S1fglZxLwRBCCR+AG6hj/94Xddx8ewycrsb
      LccFgPT0PIqlKjY3N9sed9x4IgEC4C2TBOoxg2g0inK53OTW5DXF1WrVbbPuFfO85QmvN2aM
      QVEU5HI518vkXcn5uX5CDUqj4H1u/EzDx+MGrHfV7iX6DRylUKiqGpgewo3jmCZAEAgobc1g
      0UQKExMTPV1/1HjCAAHY2NjA3t4eFhYW4DiOW7QiiiIKhQKSyST29vYQi8XcrZgikQhyuRwy
      mYzrR+cuQ+45mZmZceMEvE45SOXpFB/wH88JnLs7vakUQR6oXgJsQU4Af3qG4zi4sLKAW/fW
      UHUEJCYXAscqG07XfVOPC+M1mzEBT23Y3d11syhjsRgsy3J/J4TANE3kcrm6IWiaSCaT0HUd
      uq5jbm4OxWIRxWLRXXlVVUU6nXaJhvvf/dfmwSqvu5HDKzH8NoGXObjK5mcE/5jtVCJvNmor
      icSNZdu28a5nLsG2bdy5t4r9koHk9CnXLiCEIJSYwvrDhzh7Znw8Qe/4QFgQvMThfflegqhU
      KqhUKg3f8XSCIE+H12jN5/Ouy9EbbfYTGScs7yrs9cX3GiPgUVzv/Fqt7DwdhF+br9yckXhU
      3Osy5e5U3kTs5q07MC0LtkNRMoHk9BLuXHkZ/+3f+uzYRIKfSIAA+FOKvSst33YplarnxBeL
      RTcoZts2dnd3MTMz02QwescQRbFhhfaqKF6JwCWBF4qi9F0wH5SK4e94wdWkWq0GwzBgWRYS
      iYRr/3CVjccEVFXF+vp6Q8mopmkQBAGnV0650tQ0Tbx25S38ze/7WGBK+UnhiQToAZRS3Llz
      B6Zpun59xpi7i4xhGIhEIlheXm77kh3HQaVScVdR7/hB6Rc8/4hLAL6C9yMBLMtymdOvQnnB
      t4fi/yuKAlmWUalU3A07eIFQtVp1g4jci+RvMcnjH4IgIJFIjE00+AkD9ADGGHZ3dyFJEiqV
      CsLhMAqFgmsPaJoGy7Jw+vTpjgEfx3HcuAD/n6/AXk+N30vkJZx+0iQ44fKx/Fmv7ebLg2L8
      3FZEzBnY6+7l4D2XxgVPGKBPOI7ToMtzCILgeoI6gROeYRjY2dlp6FDHv+ddrPnf/mv1Asbq
      bVi4dPLaFt0EqPyGdysm4EU+/HhBEKBpmitFxmX1B57YAAMhyKdOKXWJtlNWJ/8+FAohGo0i
      l8vBNE2Uy2WoqopyuYxEIoHd3V1XXVpYOHIxVioVGIaBVCrVQMxB3htOiP7osSAIrqEd5HXi
      Y3rvuRXj8UixP2eIx0CGkdg3bDxhgD7RbsXkQTFvO5VO4FmpQD2JjufpcIMyKO2Be2F2dnYQ
      CoXcFGZd113ViefwE0KQTqchy7IbnKOUolQqudmwwNHq7bVDuNfHW+vgZTDuXeLBMn9Gbas0
      8HHAExWoT3BD1ruXsBeapiGZTPYk7rn+XygUGnaE4baBnwkMw3BzkSilDdmsfGO/fD6PiYkJ
      1zXJ4V+h/eNyQ5kTt39V57lFXjsCOFKrvPXJfPvZJxLgMYJXrHOPjhf9RDy9PnfLstxVulUv
      H1VV3XQI/r2iKC6hcSYMcpt6CZWrLt5x+fe2bTfo9N7z+d/erhT+AFuQK3mcMH4s+YiAR0D5
      6uY3er2E0K345ynJ8XgciUSiQX0B0BAU87swWwW0ADSMwRmKd7nwjumfP7cJQqEQdF1vMoD9
      HiSuqnmv581JGkc8kQADgBDiuvTS6TTK5bLr0jQMwy0+B45W5m5WQkEQIMsyNE1DpVJpUEO4
      NPAbo93mEHmNXO7Hb7c5IFeHvOkXW1tbSCQSDQ2BNU2DYRiuVCwUCq5NwKVIrVbD9PT0WKlC
      T2yAIYKnKBeLxQajkVKKRCLRspi+HWzbRrFYbNqo218P4FWDgrxP3hyhbqWSn2G4YZ7P56Fp
      GnK5nOvtKpfLoJS6NcU8mszdn7zg58KFCyPZcbNfPJEAQwSvIwDgMgEnvHw+73phegFPxea5
      Nhw8TyhoNQ1Sgbg6E/R9K/h1fs5UPBmQMzX3eHnbvHjTtTVNw8zMDAzDGLts0CcSYATgwa1i
      sdhAtHx3yl6lAGMMxWLR7VwBtG9u5ZcA3n0Leln9/ePwtHA+J78nyW+083N5Fuw4YnyUsccI
      fNWbmJhocD0ahuFu1tfreNFotMGY9GaR+uF3S/JdMbshfq9v38+o7f725zD1YvyfJJ4wwAgh
      iiJisViD6mEYRl+EEdSctxuj2lsXzK+7s7ODcrmMarWKnZ2dBgOXz9HrzeE/PLDWqrDmUSF6
      L8ZLIXsMwXejDCqq72esaDTqBsq4FPASZRD8n/NaYl6of/fuXTcHyZsst7W1BVVVXUYIhULI
      5/OIxWJuOrgXXten97NxjQEATyTAsYATkSzLA6UCc9UqkUi4mZa8MN2fl8RX4yAjmRDiFq4w
      xtzcI86ofMuoU6dOuUX1PKrcKr3Dn6Xqlx7jiicS4BigqipSqdRQMiG9nia+nzEfl8cHvNfg
      33v18+npabcoh9c127aNSCTi+vE1TcPGxgZs23Z9/tPT09ja2kIkEoEoig2lm/7iGg7ODOOK
      J16gRxSMMXdjDm7kckPUG5XmTOF3PwatzDwq7A2aeTtLc3hrmqvVqts2xh8B5mONWw2AF+PL
      mk/QFlyN4cl4POjmr/flRfo8EOVfqb0pG95MT77CB9U1cHWOZ7B6vUZ8fK9XaJwlwBMV6BHG
      9vY2QqGQS8TewBiPxDJW797GV3Xep5SXWHozTnluE9/90pvK4YV3lec+f75RICH1Lhp8h03L
      stwA2DjaAk8Y4BFGpVJBqVSCpmluqoSmae4GHeFw2FVRuK7u7fHv7f0JoKH1IR+nVYcLPzF7
      a34VRXFrnXm/0XHF/w8FEWs57nD/owAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales/profit client' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 clients (profit)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 clients (sales)' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='What decrease profit and where' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Worst 10 clients (profit)' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
